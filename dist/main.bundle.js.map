{"version":3,"file":"main.bundle.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,SAAU,GAAIH,GACK,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,IARnB,CASGK,MAAM,K,sPCRT,oBACA,cAGA,cACA,cACA,aACA,cACA,cAGA,cA+Ca,EAAAC,gBAAkB,UAAMC,MA/B4B,EAAGC,WAIhE,wBAAC,UAAK,MACH,aAAIA,GAAO,EAAGC,OAAMC,cAAaC,GAASC,IACzC,wBAAC,UAAS,CACRC,IAAK,yBAAyBD,OAC1BD,GAEJ,wBAAC,UAAgB,iBACA,QAAQC,aACvBE,WAAY,wBAAC,UAAc,MAC3BC,GAAI,QAAQH,aAEZ,wBAAC,UAAG,CAACI,GAAI,CAAEC,cAAe,eACvBR,IAIL,wBAAC,UAAgB,KACf,wBAAC,UAAG,KACDC,W,ozBCjDf,oBAGA,cACA,cACA,cAGA,cACA,cAGA,WAiEa,EAAAQ,aAAe,UAAMX,MAzDsB,EAAGY,SAAQC,UAASC,eAC1E,MAAOC,EAAQC,IAAa,IAAAC,UAAS,GAE/BC,GAAa,IAAAC,cAAY,KAC7BH,GAAUI,IACJA,EAAQN,GAEVF,EADAQ,GAAgB,GAGXA,OAER,CAACR,EAAQE,IAENO,GAAc,IAAAF,cAAY,KAC9BH,GAAUI,IACJL,EAAS,GAEXF,EADAO,GAAgB,GAGXA,OAER,CAACL,EAAQF,IAEZ,OACE,wBAAC,UAAG,CAACJ,GAAI,CAAEa,GAAI,EAAGC,WAAY,SAAUC,eAAgB,SAAUC,QAAS,SACzE,wBAAC,UAAG,cACS,uBACXC,MAAM,YACNC,QAASN,EACTO,KAAK,SAEL,wBAAC,UAAU,CAACC,SAAS,WAGvB,wBAAC,UAAG,CAACpB,GAAI,CAAEqB,GAAI,EAAGC,MAAO,QACvB,wBAAC,UAAS,CACRC,OAAO,IAAAC,UAAS,qBAChBC,QAAQ,WACRd,MAAOL,EACPoB,UAAQ,EACRP,KAAK,WAIT,wBAAC,UAAG,cACS,oBACXF,MAAM,UACNC,QAAST,EACTU,KAAK,SAEL,wBAAC,UAAO,CAACC,SAAS,gB,+xBCtE1B,oBAGA,cACA,cACA,cACA,cAGA,YAGA,WACA,WAGA,aAGA,WAsDA,UAAe,UAAM7B,MA9B6B,EAAGoC,kBACnD,MAAM,UAAEC,IAAc,IAAAC,kBAChB,UAAEC,GAAcH,KACfI,EAAYC,IAAe,IAAAxB,WAAS,GAErCyB,GAAc,IAAAvB,cAAY,IAAMsB,GAAaD,IAAa,CAACA,IAEjE,OACE,gDACE,wBAAC,UAAM,CAAC/B,GAAI,EAAAkC,SAAUC,SAAS,SAC7B,wBAAC,UAAO,KACN,wBAAC,EAAAC,KAAI,CAACpC,GAAI,EAAAqC,WAAYC,GAAG,KACvB,+BAAKC,IA/BJ,GA+BeC,IAAI,UAGtB,wBAAC,UAAU,CAACxC,GAAI,CAAEyC,SAAU,GAAKxB,MAAM,YAAYQ,QAAQ,MACxDG,GAGH,wBAAC,UAAU,CAACc,UAAU,mBAAkB,aAAY,OAAOC,KAAK,MAAMzB,QAASe,GAC7E,wBAAC,UAAQ,SAKf,wBAAC,UAAI,CAACH,UAAWA,EAAWc,YAAa,IAAMZ,GAAY,GAAQD,WAAYA,S,8xBCpErF,oBACA,WAGA,cACA,cACA,aACA,cACA,cACA,aACA,cAGA,WAGA,WAWMc,OAAuBC,IAAXC,OAAuB,IAAMA,OAAOC,SAASC,UAAOH,EAiDtE,UAAe,UAAMvD,MA/Ca,EAAGwC,aAAYa,cAAad,gBAC5D,MAAMoB,GAAkB,IAAAC,UAAQ,KAC9B,MAAMC,EACJ,wBAAC,UAAa,CAACpD,GAAI,EAAAqD,aACjB,wBAAC,EAAAC,KAAI,CAACC,QAAQ,eAAe9B,QAAQ,KAAK+B,WAAS,EAACC,MAAO,CAAEC,UAAW,WAItElE,EAAQsC,EAAU6B,KAAI,EAAGlE,OAAMmE,KAAMC,EAAMC,OAAMC,WAAU,KAE7D,wBAAC,EAAAC,SAAQ,CAACnE,IAAK,qBAAqBiE,KAClC,wBAAC,UAAQ,CAACG,QAAM,EAACC,UAAW,EAAA9B,KAAMlB,QAAS0B,EAAaN,GAAIwB,GAC1D,wBAAC,UAAY,KACX,wBAACD,EAAI,OAEP,wBAAC,UAAY,CAACM,SAAS,IAAA3C,UAAS/B,MAGjCsE,GAAW,wBAAC,UAAO,SAK1B,OACE,wBAAC,UAAI,CAACX,UAAWA,EAAWpD,GAAI,CAAEoE,GAAI,IACnC5E,KAGJ,CAACsC,EAAWc,IAEf,OACE,wBAAC,UAAM,CACL5C,GAAI,CAAEoE,GAAI,EAAGC,QAAS,eAAgB,6BAA8B,CAAEpD,MAAO,wBAC7E4B,UAAWA,EACXyB,OAAO,QACP7C,QAAQ,YACR8C,KAAMxC,EACNyC,QAAS5B,EACT6B,WAAY,CACVC,aAAa,IAGdxB,O,4GCtEM,EAAAG,YAAuB,CAClCsB,WAAY,EACZC,cAAe,EACfC,gBAAiB,gBAGN,EAAA3C,SAAoB,CAC/B4C,OAAQ,QACRT,QAAS,mBACT,qBAAsB,CACpBU,UAAW,SAIF,EAAA1C,WAAsB,CACjCqB,UAAW,MACXsB,YAAa,EACb,QAAS,CACP1D,MAAO,U,qzBCpBX,oBACA,cACA,cAGA,cACA,cACA,cAGA,WAkCM2D,EAAwC,KACrC,CACLC,WAAW,EACXC,KAAM,GACNC,QAAS,SA2GA,EAAAC,aAAe,UAAM9F,MAvGsB,EACtD+F,WAAWL,EACXM,UAAU,GACVC,iBACAC,aACAC,cACAC,WACAhF,MAAOiF,EACPC,kBACGlG,MAEH,MAAQmG,MAAOC,EAAYC,YAAY,MAAEC,IAAYP,GAC7CC,SAAUO,GAAkBH,GAC9B,MAAExE,EAAK,SAAE4E,EAAQ,cAAEC,GAAkBX,GAEpCY,EAAmBC,IAAwB,IAAA9F,UAASoF,IACpDW,EAAYC,IAAiB,IAAAhG,UAAS,KACtCiG,EAAcC,IAAmB,IAAAlG,UAAS+E,IAE3C,UAAEL,EAAS,KAAEC,EAAI,QAAEC,GAAYE,EAAS,CAAEqB,OAAQ,CAAE9G,IAAK0G,IAAgB,CAAEK,SAAS,IAEpFC,GAAiB,IAAAC,SAAO,cAC5B,IAAM1B,KACN,OAGI2B,GAAc,IAAAC,UAASzF,GAEvB0F,GAAc,IAAAvG,cAAaiG,GAE7B,wBAAC,UAAS,IACJA,EACJpF,MAAOwF,EACPG,WAAY,IACPP,EAAOO,WACV1B,eAAgBA,EAChB2B,aACE,gDACGC,QAAQlC,IAAe,wBAAC,UAAgB,CAACjE,MAAM,UAAUE,KAAM,KAC/DwF,EAAOO,YAAYC,eAI1BlB,MAAOmB,QAAQnB,GACfoB,YAAY,aAAIpB,EAAO,UAAWE,MAGrC,CAACX,EAAgBS,EAAOc,EAAaZ,EAAUjB,IAE5CoC,GAAe,IAAA5G,cAA+B,CAAC6G,EAAM5G,KACzDuF,EAAcvF,GACd2F,EAAqB3F,GAEG,mBAAbgF,GACTA,EAAShF,KAEV,CAACgF,IAEE6B,GAAoB,IAAA9G,cAAoC,CAAC6G,EAAM5G,KACnE6F,EAAc7F,GACduF,EAAcvF,GAEVA,EAAM8G,OAAS,GAGnBZ,EAAea,YACd,IAoBH,OAjBA,IAAAC,YAAU,KACJvB,UACJI,EAAcJ,GAEdF,EAAcE,MACb,CAACA,KAEJ,IAAAuB,YAAU,KACJC,OAAOC,GAAGvC,EAAUL,IAIpBE,GAAMA,MAAMsC,OAAS,GACvBf,EAAgBvB,EAAKA,QAEtB,CAACA,EAAMG,IAGR,wBAAC,UAAoB,IACf3F,EACJgB,MAAO0F,EACPE,WAAYA,EACZuB,eAAa,EACbC,cAAgBC,GAAMA,EACtBzC,QAASkB,EACTQ,YAAaA,EACbgB,cAAeT,EACf7B,SAAU2B,EACVY,QAAShD,EACTlF,GAAI,CAAEsB,MAAO,KAAM3B,EAAMK,U,mMCtJ/B,oBAMA,cACA,cAMA,cACA,cACA,aACA,cACA,cACA,cACA,cA+Ca,EAAAmI,kBAAqC,CAChDzC,YAAa,CACXI,MAAO,CACLH,SAAU,OACVhF,MAAO,GACPyH,OAAQ,OACRC,IAAK,OACL5I,KAAM,IAERuG,WAAY,CACVC,WAAOnD,EACPwF,SAAS,EACTC,WAAW,EACXC,SAAS,GAEXC,UAAW,CACTD,SAAS,EACTE,YAAa,GACbC,aAAa,EACbC,oBAAoB,EACpBC,YAAa,EACbC,cAAe,GACfC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,OAAQ,KAGZzD,WAAY,CACV0D,KAAM,OACN1J,KAAM,GACN8B,MAAO,KA6BE,EAAA6H,WAAa,UAAM7J,MAzBwBI,IACtD,OAAQA,EAAM8F,WAAW0D,MACvB,IAAK,WACH,OAAQ,wBAAC,UAAQ,IAAKxJ,IACxB,IAAK,eACH,OAAQ,wBAAC,UAAY,IAAKA,IAC5B,IAAK,UACH,OAAQ,wBAAC,UAAG,CAACK,GAAI,CAAEoE,GAAI,EAAGiF,GAAI,I,IAAM,wBAAC,UAAO,M,KAC9C,IAAK,aACH,OAAQ,wBAAC,UAAU,IAAK1J,IAC1B,IAAK,QACH,OAAQ,wBAAC,UAAK,IAAKA,IACrB,IAAK,SACH,OAAQ,wBAAC,UAAM,IAAKA,IACtB,IAAK,iBACH,OAAQ,wBAAC,UAAc,IAAKA,IAC9B,IAAK,YACH,YAAmCmD,IAA/BnD,EAAM8F,WAAWvB,UAAgCvE,EAAM8F,WAAWvB,UAAUvE,GAExE,gEACV,QACE,OAAQ,wBAAC,UAAS,IAAKA,QAM7B,UAAe,EAAAyJ,Y,+xBChIf,oBACA,cAGA,cACA,cACA,cACA,aACA,cAGA,WA8EA,UAAe,UAAM7J,MA5E6B,EAChDmG,aACEI,OACEH,SAAUO,KACPJ,GAELE,YAAcC,UAEhBR,YACEzF,KAAK,GACLuB,QACA4E,WACAR,WACAjE,YAAW,EACXf,aAGF,MAAM2I,GAAgB,IAAAC,kBAAiB5I,IAEhC6I,EAASC,IAAc,IAAAjJ,eAA0BsC,IAAhBgD,EAAMnF,OAAuBmF,EAAMnF,OAAUA,IAAS,GAExF2G,GAAe,IAAA5G,cAAagJ,IAChC,MAAM,QAAEF,GAAYE,EAAIC,OAExBF,EAAWD,GACXtD,EAAcsD,GAEU,mBAAb7D,GACTA,EAAS6D,KAEV,CAAC7D,IAEEiE,GAAiB,IAAAzG,UAAQ,IAChB,MAAT8C,EAEA,wBAAC,UAAc,KACZA,EAAM4D,cAII/G,IAAbqD,EAEA,wBAAC,UAAc,KACZA,QAHP,GAOC,CAACF,EAAOE,IAELY,GAAc,IAAAC,UAASzF,GAS7B,OAPA,IAAAoG,YAAU,MACH,aAAQ2B,EAAe3I,KAC1B8I,EAAW9I,GACXuF,EAAcvF,MAEf,CAAC2I,EAAe3I,IAGjB,wBAAC,UAAG,CAACX,GAAIA,GACP,wBAAC,UAAS,KACR,wBAAC,UAAgB,CACf8J,QACE,wBAAC,UAAQ,CACPpI,SAAUA,EACV8H,QAASA,EACT7D,SAAU2B,IAEd/F,MAAOwF,KAGV6C,O,2JCnFP,oBAGA,cACA,cACA,cACA,cAGA,WAyBA,UAAe,UAAMrK,MAtB+B,EAClDmG,aACEI,SAEFL,YACElE,aAGF,MAAMwF,GAAc,IAAAC,UAASzF,GAE7B,OACE,wBAAC,UAAoB,CAACwI,YAAa,WACjC,wBAAC,UAAgB,IACXjE,EACJvE,MAAOwF,EACPiD,YAAY,aACZ/C,YAAcN,GAAW,wBAAC,UAAS,IAAKA,EAAQ3G,GAAI,CAAEsB,MAAO,Y,kzBC5BrE,oBACA,WACA,WACA,WACA,WAGA,cACA,cACA,cACA,cAGA,cACA,cACA,cACA,cAGA,WAGA,cAgMa,EAAA2I,WAAa,UAAM1K,MA7JsB,EACpD2I,UACAgC,gBAAe,EACfC,SAAS,GACTzI,WACA0I,uBAAuB,GACvBC,mBACAC,iBACAC,eAEA,MAAMC,GAAW,IAAAC,gBAGVC,KAFY,IAAA5D,WAEoB,IAAAtG,WAAS,KAC9C,MAAMmK,GAAiC,aAAON,GAAkB,CAACO,GAAQnL,OAAMoL,oBAAoB,IAC9FD,EACH,CAACnL,GAAOoL,KACN,IAEJ,OAAO,IAAAC,UAASC,MAAMJ,OAGlBK,GAAmB,IAAAtK,cAAY,KAEjC8J,EADoB,iBAAXL,EACAA,GAEC,KAEX,CAACK,EAAUL,KAER,QACJL,EAAO,aACPmB,EAAY,SACZC,KACGrF,IACD,IAAAsF,SAAgC,CAAEC,UAAU,IAAAC,aAAYX,KAMtDY,GAAmB,IAAA5K,cAAmC,CAACgF,EAAaD,IAEtE,wBAAC,UAAU,CAACC,YAAaA,EAAaD,WAAYA,EAAYI,aAAcA,KAE7E,CAACA,IAEE0F,GAAY,IAAApI,UAAQ,KACjB,aAAIkH,GAAkB,EAC3BmB,aAAY,EACZC,UACAC,YAAY,GACZb,mBACGpF,GACgC5F,KACnC,IAAK2L,EACH,OAAO,KAGT,MAAMG,EACJ,wBAAC,EAAAC,WAAU,CACT/L,IAAKA,EACLJ,KAAMgG,EAAWhG,KACjBqK,QAASA,EACT+B,OAASnG,GAAgB4F,EAAiB5F,EAAaD,KAI3D,YAAgB3C,IAAZ2I,EAEA,wBAAC,UAAG,CAAC5L,IAAKA,EAAKuE,GAAI,KAAOsH,GACxB,wBAAC,UAAO,CAACI,OAAO,IAAAtK,UAASiK,GAAUM,OAAK,EAACC,UAAU,OACjD,mCACGL,KAQT,wBAAC,UAAG,CAAC9L,IAAKA,EAAKuE,GAAI,KAAOsH,GACvBC,OAKN,CAACtB,EAAkBP,EAASwB,IAEzBW,GAAa,IAAA9I,UAAQ,IACrB+G,EAAqB,KAGvB,wBAAC,UAAG,CAACgC,GAAI,GACP,wBAAC,UAAM,CACLxK,SAAUwG,EACVzG,QAAQ,YACRR,MAAM,YACNC,QAAS8J,EACTmB,kBAAgB,GAEhB,wBAAC,EAAA7I,KAAI,CAACC,QAAQ,oBAInB,CAAC2G,EAAcc,EAAkB9C,KAEpC,IAAAP,YAAU,QAKP,CAAC9B,KAEJ,IAAA8B,YAAU,MACH,aAAQ2C,KACX,aAAKA,GAAgB,CAACrE,EAAOxG,KAC3ByL,EAASzL,EAAM,CAAE0J,KAAM,QAASU,SAAS,IAAArI,UAAS,2BAA2ByE,EAAM,aAGtF,CAACqE,EAAgBY,IAEpB,MAAMkB,EAAyBhF,QAAQc,IAAYd,QAAQ1F,KAAcmE,EAAa4C,UAAUD,QAEhG,OACE,gCAAM6D,aAAa,MAAK,cAAa,OAAO9B,SAAUU,EAAaV,IACjE,wBAAC,UAAG,KACDgB,GAGH,wBAAC,UAAG,CACFvK,QAAQ,OACRD,eAAgBmJ,EAAe,WAAa,gBAC5CoC,GAAI,EACJC,GAAI,GAEHN,EACD,wBAAC,UAAM,CACLhL,MAAM,UACNkL,kBAAgB,EAChBzK,SAAU0K,EACVjD,KAAK,SACL1H,QAAQ,aAEP2F,QAAQc,IACP,wBAAC,UAAgB,eACH,oBACZ/G,KAAM,KAGV,wBAAC,EAAAmC,KAAI,CAACC,QAAS6G,W,uLChNzB,oBAEA,cAEA,cAQMoC,EAAqB,UAAMC,YAA2C,EAAG9G,cAAahG,GAAS0I,IAEjG,wBAAC,UAAY,IACP1I,EACJ+M,YAAarE,EACbsE,cAAe,EAAGhM,YAChBgF,EAAS,CACPgE,OAAQ,CACNlK,KAAME,EAAMF,KACZkB,YAINiM,kBAAkB,IAClBC,iBAAiB,IACjBC,iBAAe,MAKrBN,EAAmBO,YAAc,qBAEjC,MAAMC,EAAyD,EAAGtH,cAAaD,gBAE3E,wBAAC,UAAS,CACRC,YAAaA,EACbD,WAAY,IACPA,EACHyB,WAAY,CACV+F,eAAgBT,MAOb,EAAAU,mBAAqB,UAAM3N,KAAKyN,GAE7C,UAAe,UAAMzN,KAAKyN,I,+xBClD1B,oBACA,cAGA,cACA,cACA,cACA,cACA,YACA,cAIA,WAoFA,UAAe,UAAMzN,MAlF0B,EAC7CmG,aACEI,OACEH,SAAUO,KACPJ,GAELE,YAAcC,UAEhBR,YACElE,QACA4E,WACA3G,QACAmG,WACAhF,aAGF,MAAM2I,GAAgB,IAAAC,kBAAiB5I,IAEhC4F,EAAYC,IAAiB,IAAAhG,UAAS,IAEvC2M,GAAyB,IAAAzM,cAAagJ,IAC1C,MAAM,MAAE/I,GAAU+I,EAAIC,OACtBzD,EAAcvF,GACd6F,EAAc7F,GAEU,mBAAbgF,GACTA,EAAShF,KAEV,CAACgF,IAEEyH,GAAgB,IAAAjK,UAAQ,IACf,MAAT3D,EAAsB,KAEnBA,EAAMmE,KAAI,EAAGhD,QAAOY,YACzB,MAAMwF,EAA+B,mBAAVxF,EAAuBA,IAAUA,EAC5D,OACE,wBAAC,UAAgB,CAAC1B,IAAKkH,EAAapG,MAAOA,EAAOmJ,QAAS,wBAAC,UAAK,MAAKvI,OAAO,IAAAC,UAASuF,SAGzF,CAACvH,IAEEoK,GAAiB,IAAAzG,UAAQ,IAChB,MAAT8C,EAEA,wBAAC,UAAc,KACZA,EAAM4D,cAII/G,IAAbqD,EAEA,wBAAC,UAAc,KACZA,QAHP,GAOC,CAACF,EAAOE,IAELY,GAAc,IAAAC,UAASzF,GAS7B,OAPA,IAAAoG,YAAU,MACH,aAAQ2B,EAAe3I,KAC1BuF,EAAcvF,GACd6F,EAAc7F,MAEf,CAAC2I,EAAe3I,IAGjB,wBAAC,UAAW,CAACuD,UAAU,WAAW+B,MAAOmB,QAAQnB,IAC/C,wBAAC,UAAS,CAAC/B,UAAU,UAAU6C,GAC/B,wBAAC,UAAU,IACLjB,EACJnF,MAAO4F,EACPZ,SAAUwH,GAETC,GAEFxD,O,8xBC5FP,oBACA,aACA,cAGA,cACA,cACA,cACA,cACA,cAIA,WA+FA,UAAe,UAAMrK,MA7F2B,EAC9CmG,aACEI,OACEH,SAAUO,KACPJ,GAELE,YAAcC,UAEhBR,YACElE,QACA4E,WACAkH,WACA7N,QAAQ,GACRmG,WACAjE,WACAf,aAGF,MAAM2I,GAAgB,IAAAC,kBAAiB5I,IAEhC4F,EAAYC,IAAiB,IAAAhG,UAAS,IAEvC8M,GAAiB,IAAA5M,cAAagJ,IAClC,MAAM,MAAE/I,GAAU+I,EAAIC,OAEtBzD,EAAcvF,GACd6F,EAAc7F,GAEU,mBAAbgF,GACTA,EAAShF,KAEV,IAEGyM,GAAgB,IAAAjK,UAAQ,IACrB3D,EAAMmE,KAAI,EAAGpC,QAAOZ,QAAOe,YAAW,MAC3C,MAAMqF,EAA+B,mBAAVxF,EAAuBA,IAAUA,EAC5D,OACE,wBAAC,UAAQ,CAAC1B,IAAKkH,EAAapG,MAAOA,EAAOe,SAAUA,GAAWqF,OAGlE,CAACvH,IAEE+N,GAAc,IAAA7M,cAAa8M,IAC/B,GAAqB,IAAjBhO,EAAMiI,OAAc,MAAO,GAE/B,MAAMgG,EAAOjO,EAAMkO,MAAK,EAAG/M,WAAYA,IAAU6M,IAEjD,YAAoB1K,IAAhB2K,GAAMlM,MAA4B,GAET,mBAAfkM,EAAKlM,MAAuBkM,EAAKlM,QAAUkM,EAAKlM,QAC7D,CAAC/B,IAEEoK,GAAiB,IAAAzG,UAAQ,KAC7B,GAAa,MAAT8C,EAAe,CACjB,MAAM4D,GAAU,aAAQ5D,GAASA,EAAM,GAAG4D,QAAU5D,EAAM4D,QAC1D,OAAQ,wBAAC,UAAc,KAAEA,GAG3B,QAAiB/G,IAAbqD,EACF,OAAQ,wBAAC,UAAc,KAAEA,KAE1B,CAACF,EAAOE,IAELY,GAAc,IAAAC,UAASzF,GAS7B,OAPA,IAAAoG,YAAU,MACH,aAAQ2B,EAAe3I,KAC1BuF,EAAcvF,GACd6F,EAAc7F,MAEf,CAAC2I,EAAe3I,IAGjB,wBAAC,UAAW,CAACgN,WAAS,EAAC1H,MAAOmB,QAAQnB,GAAQoH,SAAUA,EAAUrN,GAAI,CAAEoE,GAAI,IAC1E,wBAAC,UAAU,CAACpE,GAAI,CAAEqE,QAAS,QAAShD,GAAI,GAAKtB,GAAI,aAAagH,EAAY6G,iBAAkB7G,GAC5F,wBAAC,UAAM,IACDjB,EACJ+H,QAAS,aAAa9G,EAAY6G,gBAClClM,SAAUA,EACVf,MAAO4F,EACPgH,YAAaA,EACb5H,SAAU2H,GAEV,wBAAC,UAAQ,KACP,mCAAK,IAAA9L,UAAS,+BAEf4L,GAEFxD,O,+xBCvGP,oBACA,cACA,aAGA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,cACA,cAIA,WA2GA,UAAe,UAAMrK,MAzGmC,EACtDmG,aACEI,OACEH,SAAUO,KACPJ,GAELE,YAAcC,UAEhBR,YACElE,QACA4E,WACAkH,WACA7N,QAAQ,GACRmG,WACAjE,WACAf,aAGF,MAAM2I,GAAgB,IAAAC,kBAAiB5I,IAEhC4F,EAAYC,IAAiB,IAAAhG,UAASG,GAEvC2M,GAAiB,IAAA5M,cAAagJ,IAClC,MAAM,MAAE/I,GAAU+I,EAAIC,OAEtBnD,EAAc7F,GACduF,EAAcvF,GAEU,mBAAbgF,GACTA,EAAShF,KAEV,CAACgF,IAEEyH,GAAgB,IAAAjK,UAAQ,IACrB3D,EAAMmE,KAAI,EAAGpC,QAAOZ,YACzB,MAAM6I,EAAUjD,EAAWuH,SAASnN,GAC9BoG,EAA+B,mBAAVxF,EAAuBA,IAAUA,EAE5D,OACE,wBAAC,UAAQ,CAAC1B,IAAKkH,EAAapG,MAAOA,GACjC,wBAAC,UAAQ,CAAC6I,QAASA,IACnB,wBAAC,UAAY,CAACrF,QAAS4C,SAI5B,CAACvH,EAAO+G,IAELgH,GAAc,IAAA7M,cAAa8M,GAE7B,wBAAC,UAAG,CAACxN,GAAI,CAAEgB,QAAS,OAAQ+M,SAAU,OAAQC,IAAK,KAChDxO,EACEyO,QAAO,EAAGtN,WAAY6M,EAASM,SAASnN,KACxCgD,KAAI,EAAGpC,YACN,MAAMwF,EAA+B,mBAAVxF,EAAuBA,IAAUA,EAC5D,OACE,wBAAC,UAAI,CAAC1B,IAAKkH,EAAaxF,MAAOwF,SAKxC,CAACvH,IAEEoK,GAAiB,IAAAzG,UAAQ,KAC7B,GAAa,MAAT8C,EAAe,CACjB,MAAM4D,GAAU,aAAQ5D,GAASA,EAAM,GAAG4D,QAAU5D,EAAM4D,QAC1D,OAAQ,wBAAC,UAAc,KAAEA,GAG3B,QAAiB/G,IAAbqD,EACF,OAAQ,wBAAC,UAAc,KAAEA,KAE1B,CAACF,EAAOE,IAELY,GAAc,IAAAC,UAASzF,GAS7B,OAPA,IAAAoG,YAAU,MACH,aAAQ2B,EAAe3I,KAC1BuF,EAAcvF,GACd6F,EAAc7F,MAEf,CAAC2I,EAAe3I,IAGjB,wBAAC,UAAW,CAACgN,WAAS,EAAC1H,MAAOmB,QAAQnB,GAAQoH,SAAUA,EAAUrN,GAAI,CAAEoE,GAAI,IAC1E,wBAAC,UAAU,CAACpE,GAAI,CAAEqE,QAAS,QAAShD,GAAI,GAAKtB,GAAI,sBAAsBgH,EAAY6G,iBAAkB7G,GACrG,wBAAC,UAAM,IACDjB,EACJ+H,QAAS,sBAAsB9G,EAAY6G,gBAC3ClM,SAAUA,EACVwM,UAAQ,EACRvN,MAAO4F,EACP4H,aAAcxN,EACd4M,YAAaA,EACb5H,SAAU2H,GAEV,wBAAC,UAAQ,KACP,mCAAK,IAAA9L,UAAS,+BAEf4L,GAEFxD,O,sHCvHM,EAAAwE,YAAc,CACzBC,MAAO,CACLC,QAAS,GAEXC,UAAW,CACTC,aAAc,EACd,UAAW,CACTC,WAAY,EACZxO,cAAe,gBAKR,EAAAyO,SAAW,CACtBC,OAAQ,CAENrN,MAAO,OACPkN,aAAc,EACd,0BAA2B,CACzBC,WAAY,GAEd,qCAAsC,CACpCA,WAAY,GAEd,yBAA0B,CACxBrN,SAAU,QAEZ,0CAA2C,CACzCqN,WAAY,GAEd,0BAA2B,CACzBrN,SAAU,OACVqN,WAAY,EACZH,QAAS,oBAKF,EAAAM,OAAS,CAEpB9J,OAAQ,GAIG,EAAA+J,aAAe,CAC1B9P,KAAM,CACJoD,SAAU,WACV,wBAAyB,CACvBsM,WAAY,EACZtM,SAAU,aAGdyB,KAAM,CACJzB,SAAU,WACV2C,OAAQ,EACRgK,IAAK,OACL,WAAY,CACVC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,WACT/M,SAAU,WACVgN,WAAY,8DACZC,aAAc,gCACdC,cAAe,SAGnBC,WAAY,CACV5L,UAAW,EACX+K,WAAY,EACZzN,QAAS,OACT,mBAAoB,CAClBgE,YAAa,IAGjBuK,SAAU,CACR,UAAW,CACTC,YAAa,U,+xBC5EnB,oBACA,cAGA,WACA,cACA,cAGA,WAGA,cAKA,UAuFA,UAAe,UAAMjQ,MArF8B,EACjDmG,aACEI,OACEH,SAAUO,KACPJ,GAELE,YAAcC,UAEhBR,YACEzF,KAAK,GACLuB,QACA4E,WACAe,aAAa,GACbtD,OACA+B,WACAhF,WACG8E,OAGL,MAAM6D,GAAgB,IAAAC,kBAAiB5I,IAEhC4F,EAAYC,IAAiB,IAAAhG,UAAS,IAEvCiP,GAAuB,IAAAtM,UAAQ,KACnC,GAAY,MAARS,EAAc,OAElB,MAAMC,EAAOD,EAEb,OACE,wBAAC,UAAc,CAACzB,SAAS,SACvB,wBAAC0B,EAAI,CAAC5C,MAAM,cAGf,CAAC2C,IAEE8L,GAAqB,IAAAvM,UAAQ,KACjC,GAAa,MAAT8C,EAEJ,OACE,wBAAC,UAAc,CAAC9D,SAAS,OACvB,wBAAC,UAAK,CAACnC,GAAI,CAAEoB,SAAU,GAAIH,MAAO,EAAA0O,IAAI,WAGzC,CAAC1J,IAEEqB,GAAe,IAAA5G,cAAagJ,IAChC,MAAM,MAAE/I,GAAU+I,EAAIC,OACtBzD,EAAcvF,GACd6F,EAAc7F,GAEU,mBAAbgF,GACTA,EAAShF,KAEV,CAACgF,IAEEoB,GAAc,IAAAC,UAASzF,GAS7B,OAPA,IAAAoG,YAAU,KACH,UAAEiI,QAAQtG,EAAe3I,KAC5BuF,EAAcvF,GACd6F,EAAc7F,MAEf,CAAC2I,EAAe3I,IAGjB,wBAAC,UAAS,IACJ8E,KACAK,EACJH,SAAU2B,EACV3G,MAAO4F,EACPoH,WAAS,EACTkC,OAAO,SACP7P,GAAI,IAAK,EAAAoO,eAAgBpO,GACzBuB,MAAOwF,EACPd,MAAOmB,QAAQnB,GACfoB,WAAY,UAAEyI,IAAI7J,EAAO,UAAWE,GACpCe,WAAY,IACPA,EACH1B,eAAgBiK,EAChBtI,aAAcuI,S,2fCnGtB,cACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,cACA,cACA,c,6KCbA,oBAEA,cAca,EAAAK,SAAW,UAAMxQ,MARqB,EAAGyQ,QAAOvQ,OAAO,MAEhE,wBAAC,UAAM,CAAC8C,IAAKyN,EAAOxN,IAAK/C,EAAMgC,QAAQ,UACpChC,EAAKwQ,MAAM,EAAG,GAAGC,kB,yKCVxB,oBACA,WAGA,cAMa,EAAA9N,KAAO,UAAM7C,MAJkC,EAAG+C,QAAO3C,KAC7D,wBAAC,UAAY,CAACuE,UAAW,OAAY5B,GAAIA,KAAQ3C,O,4KCP1D,oBAGA,cACA,cACA,cAGA,WAuBa,EAAAwQ,QAAU,UAAM5Q,MAhBgB,EAAG6Q,YAAW,KACrDA,EAEA,wBAAC,UAAQ,CAACpQ,GAAI,EAAAqQ,kBAAmB9L,MAAI,GACnC,wBAAC,UAAgB,CAACtD,MAAM,aAM5B,wBAAC,UAAG,CAACjB,GAAI,CAAEgB,QAAS,OAAQF,WAAY,SAAUC,eAAgB,WAChE,wBAAC,UAAgB,CAACE,MAAM,gB,6KC3B9B,oBAEA,cACA,YACA,cAiBa,EAAAqP,SAAW,UAAM/Q,MAfM,IAEhC,wBAAC,UAAI,CAACsD,WAAS,GACb,wBAAC,UAAI,CAAC4K,MAAI,EAAC8C,GAAI,IACb,wBAAC,UAAK,KACJ,wBAAC,UAAG,CAACC,EAAG,GACN,8BAAI9N,UAAU,aAAW,QACzB,6BAAGA,UAAU,QAAM,yB,izBCZ/B,oBAGA,cACA,aACA,cAGA,WA8Da,EAAA+N,SAAW,UAAMlR,MAvDM,KAClC,MAAM,gBAAEmR,EAAe,mBAAEC,IAAuB,IAAA9O,iBAE1C+O,GAAc,IAAAlQ,cAClB,KACEiQ,OAAmB7N,KAErB,CAAC6N,IAGGE,GAAe,IAAA1N,UAAQ,IAC3B,wBAAC,UAAM,CACLlC,MAAM,UACNE,KAAK,QACLD,QAAS0P,GAAW,OAIrB,CAACA,IAEEE,GAAgB,IAAA3N,UAAQ,KAC5B,QAAwBL,IAApB4N,EAA+B,OAEnC,MAAMK,EAA0C,iBAApBL,EAA+BA,EAAgB7G,QAAU6G,EAC/EM,EAA2C,iBAApBN,EAA+BA,EAAgBO,SAAW,UAEvF,OACE,wBAAC,UAAK,CACJC,UAAW,EACXzP,QAAQ,SACRwP,SAAUD,EACVxM,QAASoM,GAERG,KAIJ,CAACL,EAAiBE,IAErB,OACE,wBAAC,UAAQ,CACPO,OAAQN,EACRO,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdC,iBAAkB,IAClB/M,QAASoM,EACTrM,KAAM6C,QAAQsJ,IAEbI,O,0FClEM,EAAAT,kBAAoB,CAC/BvL,OAAQ,EACR7D,MAAO,S,izBCFT,oBACA,cAGA,cACA,cACA,cACA,cACA,aACA,cACA,cA2Ea,EAAAuQ,SAAW,UAAMjS,MAlEqB,EACjDkS,YACAC,YACAvQ,OAAO,QACPuB,eACG/C,MAEH,MAAMgS,GAAkB,IAAAxO,UAAQ,KAC9B,MAAMyO,GAAO,aAAIH,GAAW,CAAChS,EAAMoS,KACjC,MAAMhS,EAAM,aAAaJ,KAAQoS,IACjC,OACE,wBAAC,UAAS,CACRhS,IAAKA,EACLiS,MAAOD,EAAM,EAAI,QAAU,QAE1BpS,MAKP,OACE,wBAAC,UAAS,KACR,wBAAC,UAAQ,KACNmS,MAIN,CAACH,IAEEM,GAAkB,IAAA5O,UAAQ,IAC9B,wBAAC,UAAS,KACPuO,EAAU/N,KAAI,CAACqO,EAAKC,IAEjB,wBAAC,UAAQ,CAACpS,IAAK,iBAAiBoS,KAC7BD,EAAIrO,KAAI,CAAC8J,EAAMyE,IACd,wBAAC,UAAS,CACRrS,IAAK,iBAAiBoS,UAAeC,IACrChO,UAAuB,IAAZgO,EAAgB,UAAOpP,EAClCqP,MAAmB,IAAZD,EAAgB,WAAQpP,EAC/BgP,MAAOI,EAAU,EAAI,QAAU,QAE9BzE,UAQZ,CAACiE,IAEJ,OACE,wBAAC,UAAc,CAAChP,UAAWA,EAAWwB,UAAW,WAC/C,wBAAC,UAAK,IACAvE,EAAK,aACE,eACXwB,KAAMA,GAELwQ,EAEAI,Q,+yBC/ET,oBACA,cAGA,cACA,aACA,cACA,cAoBMK,EAAoC,EAAG1S,WAAUiB,QAAO0R,WAAUC,KAEpE,+BACEC,KAAK,WACLC,OAAQ7R,IAAU0R,EAClBtS,GAAI,mBAAmBsS,IAAO,kBACb,cAAcA,OAC3BC,GAEH3R,IAAU0R,GACT,wBAAC,UAAG,KACF,wBAAC,UAAU,KAAE3S,KAgDV,EAAA+S,QAAU,UAAMlT,MAzCoB,EAAGoB,QAAQ,EAAG+R,aAAYC,eACzE,MAAOC,EAAUC,IAAe,IAAArS,UAASG,GAEnC2G,GAAe,IAAA5G,cAAY,CAACoS,EAA6BC,IAAqBF,EAAYG,SAASD,EAAU,MAAM,IAEnHE,GAAa,IAAA9P,UAAQ,KAClB,aAAIuP,GAAYjF,IAAQ,OAC7B,wBAAC,UAAG,CACF5N,IAAK,OAAO4N,QA5CD4E,EA6CG5E,EAAKyF,WA7CiD,CAC1EnT,GAAI,cAAcsS,IAClB,gBAAiB,mBAAmBA,MA4C9B9Q,MAAOkM,IA9CG,IAAC4E,MAiDd,CAACK,IAEES,GAAkB,IAAAhQ,UAAQ,KACvB,aAAIwP,GAAU,CAAClF,EAAM4E,IAC1B,wBAACD,EAAQ,CAACvS,IAAKwS,EAAOA,MAAOW,SAASX,EAAO,IAAK1R,MAAOiS,GACtDnF,MAGJ,CAACkF,EAAUC,IAEd,OACE,gDACE,wBAAC,UAAG,CAAC5S,GAAI,CAAEoP,aAAc,EAAGgE,YAAa,YACvC,wBAAC,UAAI,CACHzS,MAAOiS,EACPjN,SAAU2B,EACV7F,QAAQ,aACR4R,cAAc,QAGbJ,IAGJE,O,ovBCjFP,oBACA,WAGA,WAgBMG,EAAc,IAAI,EAAAC,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,MAAO,EACPC,sBAAsB,EACtBC,UAAW,IACXC,UAAW,QAKXC,EAAa,UAAMC,mBAA2CjR,GA4BvD,EAAAjB,cAAgB,KAC3B,MAAMmS,GAAU,IAAAC,YAAWH,GAE3B,QAAgBhR,IAAZkR,EACF,MAAM,IAAIE,MAAM,yCAGlB,OAAOF,GAGI,EAAAG,YAAc,UAAM5U,MApCgC,EAAGG,eAClE,MAAO0U,EAAQC,IAAa,IAAA7T,aACrBkQ,EAAiBC,IAAsB,IAAAnQ,aACvCoB,EAAW0S,IAAgB,IAAA9T,UAAS,IAErCG,EAAyB,CAC7ByT,SACAC,YACA3D,kBACAC,qBACA/O,YACA0S,gBAGF,OACE,wBAACR,EAAWS,SAAQ,CAAC5T,MAAOA,GAC1B,wBAAC,EAAA6T,oBAAmB,CAACC,OAAQnB,GAC1B5T,EACD,wBAAC,EAAA+Q,SAAQ,Y,izBCnDjB,oBACA,WAGA,cAEA,WACA,cACA,WAeMiE,EAAStN,SAAQ,IAAAuN,sBAAqB,UA8B/B,EAAAC,UAAY,UAAMrV,MA5BsB,EAAGsV,aAAYC,SAAQC,kBAAiBpT,kBAC3F,MAAOqT,IAAc,IAAAxU,WAAS,IACVsU,EAAOnR,KAAI,EAAGsR,aAAYC,KACnC,wBAAC,EAAAC,MAAK,CAACtV,IAAKqV,EAAMpR,QAAUoR,EAAOE,QAAS,wBAACH,EAAO,YAM/D,OACE,wBAAC,EAAAI,WAAU,KACT,wBAACN,EAAe,KACb3N,QAAQsN,IAAW,wBAAC,UAAM,CAAC/S,YAAaA,IACzC,wBAAC,UAAG,CAAC3B,GAAI,CAAEoE,GAAIsQ,EAAS,EAAI,IAC1B,wBAAC,EAAAY,OAAM,KACJZ,GAAUM,EACX,wBAAC,EAAAG,MAAK,CACJrR,KAAK,UACLsR,QAAS,wBAACP,EAAU,QAEtB,wBAAC,EAAAM,MAAK,CAACrR,KAAK,IAAIsR,QAAS,wBAAC,EAAA9E,SAAQ,gB,+xBC5C9C,oBACA,WACA,cAIA,cACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,aACA,cAGA,cAGA,WAGA,WAmJA,UAAe,UAAM/Q,MA/HwC,EAAGgG,UAASuG,QAAOtH,UAAS+Q,eAAcC,uBACrG,MAAMhL,GAAW,IAAAC,gBACVgL,EAAYC,IAAiB,IAAAlV,UAAS,qBACtCmV,EAAgBC,IAAqB,IAAApV,UAAS,IAC/CqV,GAAkB,IAAA/O,UAElB7E,GAAc,IAAAvB,cAA8B,EAAG4B,KAAIwT,YAAWC,aAAalW,IAAQ,KACvF+V,EAAkB/V,GAEA,iBAAPyC,GAA0B,KAAPA,EAC5BkI,EAAS,GAAGlI,KAAMiT,EAAaxV,MACR,mBAAPuC,GAChBA,EAAGiT,QAGazS,IAAdiT,GACFL,EAAc,4BAGE5S,IAAdgT,IACFD,EAAgBnO,QAAUoO,EAC1BJ,EAAc,uBAEf,CAAClL,EAAU+K,EAAaxV,KAErBiW,GAAqB,IAAAtV,cAAYuV,UACE,mBAA5BJ,EAAgBnO,eACnBmO,EAAgBnO,QAAQ6N,GAEhC/Q,MACC,CAAC+Q,EAAc/Q,IAEZ0R,GAAoB,IAAA/S,UAAQ,IAE9B,wBAAC,UAAI,MACF,aAAIoC,GAAS,CAAC4Q,EAAQtW,KACrB,MAAMuW,EAA8C,mBAAxBD,EAAOC,cAA8BD,EAAOC,aAAab,GAC/E7T,EAAsC,mBAApByU,EAAOzU,SAA0ByU,EAAOzU,SAAS6T,GAAgBY,EAAOzU,SAEhG,OAAK0U,EAGH,wBAAC,UAAc,CAACvW,IAAKA,EAAKkE,SAAO,EAAC7C,QAASe,EAAYkU,EAAQtW,GAAM6B,SAAUA,GAC7E,wBAAC,UAAc,KAAEyU,EAAOvS,MACxB,wBAAC,UAAY,CAACO,QAASgS,EAAOE,QALR,UAY/B,CAAC9Q,EAAStD,IAEPqU,GAAmB,IAAAnT,UAAQ,IAE7B,wBAAC,UAAG,CAACnD,GAAI,CAAEwQ,EAAG,IACZ,wBAAC,UAAG,CAACxQ,GAAI,CAAEqJ,GAAI,IACb,wBAAC,EAAA/F,KAAI,CAACC,QAAQ,yBAAyB9B,QAAQ,KAAKR,MAAM,eAG5D,wBAAC,UAAG,CAACjB,GAAI,CAAEgB,QAAS,OAAQD,eAAgB,kBAC1C,wBAAC,UAAM,CACLU,QAAQ,YACRR,MAAM,YACNE,KAAK,QACLD,QAAS,IAAMwU,EAAc,qBAE7B,wBAAC,EAAApS,KAAI,CAACC,QAAQ,kBAGhB,wBAAC,UAAM,CACL9B,QAAQ,YACRR,MAAM,UACNE,KAAK,QACLD,QAAS8U,GAET,wBAAC,EAAA1S,KAAI,CAACC,QAAQ,wBAKrB,CAACyS,IAEEO,EAAsB,UAAMpT,SAAQ,KACxC,GAAuB,KAAnBwS,EAAuB,OAAO,KAElC,MAAM,UAAEI,GAAcxQ,EAAQoQ,GAE9B,YAAkB7S,IAAdiT,EAEG,wBAACA,EAAS,CAACtI,KAAM8H,EAAc/Q,QAASA,SAF/C,IAGC,CAACe,EAASgQ,EAAcI,EAAgBnR,IAErCgS,GAAgB,IAAArT,UAAQ,KAC5B,OAAQsS,GACN,IAAK,mBACH,OAAOa,EACT,IAAK,sBACH,OAAOC,EACT,QACE,OAAOL,KAEV,CAACT,EAAYa,EAAkBC,EAAqBL,IAEvD,OACE,wBAAC,UAAM,mBACW,iBAChBvI,WAAS,EACT8I,WAAYjB,EACZhR,QAASA,EACTD,MAAI,GAEJ,wBAAC,UAAW,CAACxE,GAAG,wBACb+L,EACD,wBAAC,UAAU,CAAC9L,GAAI,EAAA0W,oBAAmB,aAAa,QAAQxV,QAASsD,GAC/D,wBAAC,UAAS,CAACpD,SAAS,YAIxB,wBAAC,UAAa,CAACuV,UAAQ,GACpBH,Q,szBCpKT,oBAWA,WAEA,cAGA,cACA,cACA,cACA,aAGA,cAGA,WACA,WACA,WAGA,cAqRa,EAAAI,cAAgB,UAAMrX,MAjL0B,EAC3D+F,WACAuR,iBACAC,WACAlV,YACAmV,UACAC,gBACAxB,oBAAmB,EACnByB,kBACA/O,UACAgP,gBACAC,qBACAC,OACAC,sBAEA,MAAM,aAAE/C,EAAY,mBAAE3D,IAAuB,IAAA9O,kBAEtCyV,EAAcC,IAAmB,IAAA/W,aAEjC+U,EAAciC,IAAmB,IAAAhX,eAAwCsC,GAE1E2U,GAAc,IAAAtU,UAAQ,SACLL,IAAjBwU,EAAmCT,EAEhC,CAAElQ,OAAQ2Q,IAChB,CAACT,EAAgBS,KAEZpP,QAAShD,EAAWC,KAAMuS,EAAS,MAAEzR,GAAUX,EAASmS,GAE1DE,GAAmB,IAAAjX,cAAa6U,GAAsB,KACpC,MAAjByB,GAA8C,MAAnBC,GAC9BO,EAAgBjC,KAEjB,CAACyB,EAAeC,IAEbW,GAAgB,IAAAlX,cAAY,IAAM8W,OAAgB1U,IAAY,IAE9D+U,GAAe,IAAA1U,UAAQ,SACVL,IAAbgU,EAA+B,KAGjC,wBAAC,UAAG,CAAC9W,GAAI,CAAEgB,QAAS,OAAQD,eAAgB,WAAYqD,GAAI,EAAGoM,EAAG,EAAGjE,GAAI,EAAGD,GAAI,IAC9E,wBAAC,UAAM,CACLrL,MAAM,UACNiD,UAAW,EAAA9B,KACXE,GAAIwU,EACJrV,QAAQ,aAER,wBAAC,UAAO,OACP,IAAAD,UAASuV,GAAW,kBAI1B,CAACD,EAAUC,IAERe,GAAe,IAAA3U,UAAQ,IACN,MAAhBoS,GAA2C,MAAjByB,EAA+B,KAEvC,MAAnBC,EAEA,wBAACA,EAAe,CACdzB,iBAAkBA,EAClBhR,QAASoT,EACTrC,aAAcA,EACdzJ,MAAOyJ,EAAa9V,OAAQ,IAAA+B,UAAS,6BAKrBsB,IAAlBkU,EAEA,wBAAC,UAAa,CACZxB,iBAAkBA,EAClBhR,QAASoT,EACTrS,QAASyR,EACTzB,aAAcA,EACdzJ,MAAOyJ,EAAa9V,OAAQ,IAAA+B,UAAS,6BAP3C,GAYF,CACE+T,EACAyB,EACAxB,EACAoC,EACAX,IAIIc,GAAa,IAAA5U,UAAQ,KACzB,QAAkBL,IAAd4U,EAAyB,OAAO,KAEpC,MAAM,KAAEvS,GAASuS,EAEjB,GAAY,MAARN,EAAc,CAChB,MAAMzE,EAAWyE,EAAKY,WAAWrU,KAAI,CAACsU,EAAIC,KACxC,MAAMC,EAAeF,EAAG9S,GACxB,OACE,wBAAC,UAAI,CAACtF,IAAK,YAAYqY,MACpB,aAAIC,GAAc,CAAC1K,EAAMoE,IACxB,wBAACqF,EAAa,IACRC,EACJtX,IAAKgS,EACLpE,KAAMA,EACN2K,SAAUT,UAOpB,OACE,wBAAC,EAAAlF,QAAO,CACNE,SAAUA,EACVD,WAAY0E,EAAK1E,aAKvB,OACE,wBAAC,UAAI,MACF,aAAIvN,GAAM,CAACsI,EAAMoE,IAChB,wBAACqF,EAAa,IACRC,EACJtX,IAAKgS,EACLpE,KAAMA,EACN2K,SAAUT,SAMpB,CACED,EACAR,EACAC,EACAQ,EACAP,IAIIiB,GAAgB,IAAAlV,UAAQ,KAC5B,IAAgB,IAAZ+E,IAAkC,IAAdhD,EAAoB,OAAO,wBAAC,EAAAiL,QAAO,CAACC,UAAQ,MACnE,CAAClI,EAAShD,IAEPoT,GAAe,IAAAnV,UAAQ,SACHL,IAApBuU,EAAsC,KAGxC,wBAACA,EAAe,CAACkB,SAAUhB,KAE5B,CAACF,IAYJ,OAVA,IAAA1P,YAAU,KACR2M,GAAa,IAAA9S,UAASI,MACrB,CAAC0S,EAAc1S,KAElB,IAAA+F,YAAU,KACJ1B,aAAiBiO,OACnBvD,EAAmB,CAAE9G,SAAS,IAAArI,UAAS,iBAAkByP,SAAU,YAEpE,CAAChL,EAAO0K,IAGT,wBAAC,UAAK,KACHmH,EACAD,EACD,wBAAC,UAAG,KACDS,EACAP,GAEFM,O,4FC7SM,EAAA3B,oBAA+B,CAC1CvU,SAAU,WACV6M,MAAO,EACPF,IAAK,EACL7N,MAAQuX,GAAeA,EAAMC,QAAQC,KAAK,O,wuBCN5C,oBACA,WA4Ba,EAAAC,gBAAkB,UAAMpZ,MAlB4B,EAAGuV,aAClE,MAAM8D,GAAiB,IAAAzV,UAAQ,IACtB2R,EAAOnR,KAAI,EAAG0O,SAAQ,EAAOvO,OAAMiS,eACxC,wBAAC,EAAAZ,MAAK,CAACtV,IAAKiE,EAAMuO,MAAOA,EAAOvO,KAAMA,EAAMsR,QAAS,wBAACW,EAAS,WAEhE,CAACjB,IAGJ,OACE,gDACE,wBAAC,EAAAQ,OAAM,KACJsD,GAEH,wBAAC,EAAAC,OAAM,W,szBCxBb,oBASA,WACA,cACA,cAGA,cACA,cAGA,WAGA,WACA,WA6Ka,EAAAC,cAAgB,UAAMvZ,MA1I0B,EAC3DwZ,SACAnX,YAAY,GACZoX,gBACEC,yBAAwB,EACxB/O,gBAAe,EACfxI,YAAW,EACX0I,uBACAC,oBAEF6O,SACEC,eACAC,YACAC,mBAAmB,GACnBC,cACAhU,WAAW,MAAM,KACjBuR,iBACA0C,kBAAkB,GAClBC,kBAGF,MAAM,aAAElF,EAAY,mBAAE3D,IAAuB,IAAA9O,kBACvC,GAAE9B,EAAK,KAAO,IAAA0Z,aAEdC,GAAmB,IAAA5S,SAAO,GAC1B6S,GAAU,IAAA7S,SAAO,IAEjB,OAAE8S,EAAM,UAAEC,EAAS,MAAE5T,EAAOf,UAAW4U,EAAQ3U,KAAM4U,GAAoBX,EAAUrZ,EAAIsZ,IAEvF,UAAEnU,GAAY,EAAOC,KAAMuS,EAAY,IAAYpS,EAAS,CAAEvF,KAAI4G,OAAQkQ,GAAkB,CAChGjQ,QAASQ,QAAQrH,GACjBia,YAAY,KACTT,IAGCtO,GAAe,IAAAvK,cAAauZ,IACrB,KAAPla,IACFka,EAASla,GAAKA,GAGI,MAAhBoZ,EACFA,EAAac,EAAUL,GAEvBA,EAAOK,KAER,CAACd,EAAcS,EAAQ7Z,IAEpBmJ,GAAS,IAAA/F,UAAQ,IACM,UAAvB4W,GAAY3F,OACP2F,GAAY7Q,OAGd,IACN,CAAC6Q,IAGEE,GAAW,IAAA9W,UAA+B,KAC9C,MAAM,KAAEgC,EAAO,IAAOuS,EAEtB,OAAI,aAAQvS,KAEPwU,EAAQjS,UACX,aAAK2C,GAAkBtE,SACSjD,IAA1BqC,EAAKY,EAAWtG,QAClBsG,EAAWpF,MAAQwE,EAAKY,EAAWtG,MACnCsG,EAAWrE,UAAW,MAI5BiY,EAAQjS,SAAU,EAEC,MAAd8R,GAAwBE,EAAiBhS,SAC5C8R,EAAWnP,EAAkBlF,GAG/BuU,EAAiBhS,SAAU,GAhBD2C,IAmBzB,CAACqN,EAAWrN,EAAkBmP,IAE3BU,GAAoB,IAAA/W,UAAQ,SACHL,IAAzBsH,EAA2CA,EACpC,KAAPrK,EAAkB,eACf,eACN,CAACqK,EAAsBrK,IAiC1B,OA9BA,IAAA4H,YAAU,KACR,GAAkB,KAAd/F,EACF0S,GAAa,IAAA9S,UAASI,SACjB,QAAekB,IAAXiW,EAAsB,CAC/B,MAAMjN,EAAQ,GAAGiN,EAAOoB,uBAA8B,KAAPpa,EAAY,OAAS,cACpEuU,GAAa,IAAA9S,UAASsK,OAEvB,CAAC/L,EAAIuU,EAAcyE,EAAQnX,KAG9B,IAAA+F,YAAU,KACR,IAAkB,IAAdkS,GAA6C,YAAvBE,GAAY3F,OAAsB,CAK1D,GAJI6E,GACFtI,GAAmB,IAAAnP,UAAS,wBAGhB,OAAVyE,QAAuCnD,IAArBiX,GAAY5U,KAChC,MAAM,IAAI+O,MAAM,2CAGlBoF,EAAYvZ,EAAIga,GAAY5U,KAAMc,GAGhCA,aAAiBiO,OACnBvD,EAAmB,CAAE9G,SAAS,IAAArI,UAAS,iBAAkByP,SAAU,YAGvE,CAAC4I,EAAW5T,EAAO8T,EAAYha,EAAIuZ,EAAa3I,EAAoBsI,IAGzD,KAAPlZ,IAA4B,IAAdmF,KAAsB,aAAQwS,GAK9C,wBAAC,UAAK,KACJ,wBAAC,UAAG,CAAC1X,GAAI,CAAEoE,GAAI,EAAGoM,EAAG,IACnB,wBAAC,EAAAvG,WAAU,CACT/B,QAAS4R,EACTpY,SAAUA,EACVwI,aAAcA,EACdE,qBAAsB8P,EACtB7P,iBAAkB4P,EAClB3P,eAAgBpB,EAChBqB,SAAUU,MAbT,wBAAC,EAAAkF,QAAO,CAACC,UAAQ,Q,2fC/K5B,cACA,aACA,cACA,cACA,e,2fCJA,cACA,cACA,e,kLCFA,mBACA,cAIMgK,GAAQ,EAFd,SAEczF,sBAAqB,SAKtB,EAAA0F,QAAWC,IACtB,EAAAC,IAAM,UAAMC,OAAOF,GAEnB,EAAAC,IAAIE,aAAaC,QAAQC,KAAIL,KAC3B,aAAIA,EAAQ,wBAAyB,UAAUF,KACxCE,KAGT,EAAAC,IAAIE,aAAaG,SAASD,KACxB,EAAGxV,UAAWA,IACbc,IACC,GAAsB,kBAAlBA,EAAM4D,SAA2D,MAA5B5D,GAAO2U,UAAUxG,OACxD,MAAM,IAAIF,MAAM,iBAElB,GAAgC,MAA5BjO,GAAO2U,UAAUxG,OACnB,MAAM,IAAIF,MAAM,aAElB,GAAgC,MAA5BjO,GAAO2U,UAAUxG,OACnB,MAAM,IAAIF,MAAM,kB,mMC3BxB,iBAUA,cACA,cACA,cAKA,WAyDM2G,EAAwC,CAACpG,EAAQhB,IAAYwC,eACpD6E,QAAQC,IAAItH,EAAQ9P,KAAIsS,MAAO+E,SAAqBvG,EAAOwG,eAAeD,MAyBnFE,EAA4D,EAAGC,QAAOC,sBAAsB,OAChGA,EAAoBC,SAAQ,EAAG5b,OAAM6b,WAAUnS,WAE3CgS,EAAM,OAAM,aAAW1b,MADZ,QAAT0J,EAxBoC,EAAC1J,EAAM6b,IAAa,CAAC7D,EAAc,GAAIlS,EAAU,MAC3F,MAAM,GAAExF,EAAK,KAAI,OAAE4G,EAAS,IAAO8Q,EAEnC,OAAW,OAAP1X,GACK,cAAcN,GAAMwW,eAAkB,EAAAsE,IAAIzK,IAAI,GAAGwL,KAAYvb,MAAOwF,IAGtE,cAAc9F,GAAMwW,eAAkB,EAAAsE,IAAIzK,IAAIwL,EAAU,CAAE3U,YAAWpB,IAkBtCgW,CAAe9b,EAAM6b,GAfb,CAACA,GAAa,CAACvb,EAAmBwF,EAAU,MAC1F,MAAM,eAAE0V,EAAiB,IAAO1V,EAE1BiW,EAAYX,GAAgB,IAAAY,kBAAkB,CAACH,KAAaL,IAElE,OAAO,IAAAS,cAAYzF,MAAOtP,GACb,OAAP5G,QAA0B,EAAAwa,IAAIoB,IAAI,GAAGL,KAAYvb,IAAM4G,SAC9C,EAAA4T,IAAIqB,KAAKN,EAAU3U,IAC/B,CAAE6U,eAAcjW,KASmBsW,CAAkBP,OAsC7C,EAAAQ,aAAkC,CAACR,EAAUF,KACxD,QAAYtY,IAAR,EAAAyX,IACF,MAAM,IAAIrG,MAAM,qBAGlB,MAAMO,GAAS,IAAAgH,kBAET1C,GAAS,aAAWuC,GA0CpBH,EAAoB,CACxB,CAAC,MAAMpC,WAhCyB,CAACxT,EAAU,MAC3C,MAAM,eAAE0V,EAAiB,IAAO1V,EAC1BiW,EAAYX,EAAgBpG,EAAQ,CAAC6G,KAAaL,IAExD,OAAO,IAAAS,cAAYzF,OAASlW,QAAOwF,WAA6B,EAAAgV,IAAIwB,OAAO,GAAGT,KAAYvb,GAAM,KAAMwF,IAAU,CAAEiW,eAAcjW,KA6BhI,CAAC,MAAMwT,WA1CyB9C,MAAOlW,EAAK,KAAMwF,EAAU,MAC5D,MAAM,eAAE0V,EAAiB,IAAO1V,EAC1BiW,EAAYX,EAAgBpG,EAAQ,CAAC6G,KAAaL,IAExD,OAAW,OAAPlb,GAAoB,IAAA2b,cAAYzF,MAAOtP,SAA0B,EAAA4T,IAAIoB,IAAI,GAAGL,KAAYvb,IAAM4G,IAAS,IAAKpB,EAASiW,eAElH,IAAAE,cAAYzF,MAAOtP,SAA0B,EAAA4T,IAAIqB,KAAKN,EAAU3U,IAAS,IAAKpB,EAASiW,eAqC9F,CAAC,MAAMzC,UAlBuB,EAC5BhZ,KAAgB4G,SAAS,IAAO,IAChCqT,cAAa,EAAOgC,kBAAiB,KAAUzW,GAAY,KAExDyU,QAAqBlX,IAAP/C,GAAsBic,IAAkB,aAAQrV,GAC1D,YAGE7D,IAAP/C,GACK,cAAc,CAACub,EAAUvb,IAAKkW,eAAkB,EAAAsE,IAAIzK,IAAI,GAAGwL,KAAYvb,IAAM,CAAE4G,YAAWpB,IAG5F,cAAc,CAAC+V,EAAU3U,IAASsP,eAAkB,EAAAsE,IAAIzK,IAAIwL,EAAU,CAAE3U,YAAWpB,IAa5F,OAJ2B,MAAvB6V,GACFF,EAA0B,CAAEC,QAAOC,wBAG9BD,GAII,EAAAc,gBAAmBb,IAC9B,QAAYtY,IAAR,EAAAyX,IACF,MAAM,IAAIrG,MAAM,qBAGlB,MAAMiH,EAAQ,GAId,OAFAD,EAA0B,CAAEC,QAAOC,wBAE5BD,I,sGCxNT,iBAEA,UAEa,EAAA5R,iBAAyC5I,IACpD,MAAM0H,GAAM,IAAAvB,UAMZ,OAJA,IAAAa,YAAU,KACRU,EAAIX,QAAU/G,IACb,CAACA,IAEG0H,EAAIX,SAGA,EAAAV,SAAYzF,IACH,IAAA4B,UAAQ,IACL,iBAAV5B,GAA2B,IAAAC,UAASD,GAC1B,mBAAVA,EAA6BA,IACjC,KACN,CAACA,K,2fCnBN,cACA,cACA,aACA,cACA,cACA,e,kMCHA,oBACA,cACA,cACA,cACA,cAGA,cAmBM2a,EAA2B,GAEjC,IAAIC,EAEJ,MAQMC,EAAgBvc,GAAgB,IAAIwc,OAAO,SAASxc,OAAU,KASvD,EAAAyc,aAAgBC,IAC3BJ,EAAeI,GAWJ,EAAA/a,SAA0B,CAAC+B,EAASiZ,EAAqBC,GAAU,KAC9E,IAAIpG,GA9BUxW,EA8BI0D,GA7Bd,aAAQ4Y,GAAsB,uBAI3B,aAAIA,EAActc,EAAK,KAAKA,QALtB,IAACA,EAgCd,GAAe,MAAX2c,EACF,OAAOnG,EAGT,KAAK,aAASmG,GACZ,MAAM,IAAItI,MAAM,mDAAgD3Q,KAGlE,YAAgCT,IAA5BoZ,EAAe3Y,GACV2Y,EAAe3Y,KAGxB,aAAKiZ,GAAS,CAAC7b,EAAed,KAG5B,IAFcuc,EAAavc,EAAIqT,YAEpBwJ,KAAKrG,GACd,MAAM,IAAInC,MAAM,yBAAyBrU,2CAA0C0D,KAGrF8S,EAAOA,EAAKmG,QAAQJ,EAAavc,GAAMc,MAIpC8b,IACHP,EAAe3Y,GAAW8S,GAGrBA,IAqBI,EAAA/S,KAA8C,UAAM/D,MAlBtB,EAAGgE,UAASiZ,UAASG,iBAAgB,EAAOF,WAAU,KAAU9c,KACrGgd,EAEA,wBAAC,UAAU,IACLhd,EAAK,eACK4D,EACdqZ,wBAAyB,CAAEC,QAAQ,IAAArb,UAAS+B,EAASiZ,EAASC,MAMlE,wBAAC,UAAU,IAAK9c,EAAK,eAAgB4D,IAClC,IAAA/B,UAAS+B,EAASiZ,EAASC,MAOlC,UAAe,EAAAnZ,M,6ICxGf,MAAMwZ,EAAoB/Z,OAAOga,aAEpB,EAAApI,qBAAmD9U,IAC9D,MAAM4N,EAAOqP,EAAQE,QAAQ,MAAMnd,KAEnC,OAAa,OAAT4N,EAAsBwP,KAAKC,MAAMzP,GAE9B,IAGI,EAAA0P,qBAAkD,CAACtd,EAAKc,KACnEmc,EAAQM,QAAQ,MAAMvd,IAAOod,KAAKI,UAAU1c,KAGjC,EAAA2c,uBAAuDzd,IAClEid,EAAQS,WAAW,MAAM1d,O,uHCrBd,EAAA2d,eAAsCC,IACjD,MAAMC,EAAQC,OAAOF,KAAOA,GAAKA,EAAI,GAAM,EACvC,EACA,EACJ,OAAOE,OAAOF,GACXG,QAAQF,GACRlB,QACC,0BACA,QAIO,EAAAqB,cAAoC,CAACld,EAAOmd,GAAU,IAAS,IAAIA,EAC5E,IACA,MAAK,IAAAN,gBAAe7c,KAEX,EAAAod,cAAoC,CAAC1H,EAAO,KAKhD,GAJIA,EAAKpG,MAAM,EAAG,MACdoG,EAAKpG,MAAM,EAAG,MACdoG,EAAKpG,MAAM,O","sources":["webpack://Shared/webpack/universalModuleDefinition","webpack://Shared/./src/components/accordion.tsx","webpack://Shared/./src/components/amount.tsx","webpack://Shared/./src/components/app-bar/index.tsx","webpack://Shared/./src/components/app-bar/menu.tsx","webpack://Shared/./src/components/app-bar/sx.ts","webpack://Shared/./src/components/autocomplete.tsx","webpack://Shared/./src/components/form/buildInput.tsx","webpack://Shared/./src/components/form/checkbox.tsx","webpack://Shared/./src/components/form/datePicker.tsx","webpack://Shared/./src/components/form/index.tsx","webpack://Shared/./src/components/form/numberFormat.tsx","webpack://Shared/./src/components/form/radio.tsx","webpack://Shared/./src/components/form/select.tsx","webpack://Shared/./src/components/form/selectMultiple.tsx","webpack://Shared/./src/components/form/styles.ts","webpack://Shared/./src/components/form/textField.tsx","webpack://Shared/./src/components/index.ts","webpack://Shared/./src/components/itemName.tsx","webpack://Shared/./src/components/link.tsx","webpack://Shared/./src/components/loading.tsx","webpack://Shared/./src/components/notFound.tsx","webpack://Shared/./src/components/snackBar.tsx","webpack://Shared/./src/components/styles.ts","webpack://Shared/./src/components/table.tsx","webpack://Shared/./src/components/tabs.tsx","webpack://Shared/./src/hoc/appContext.tsx","webpack://Shared/./src/hoc/appRoutes.tsx","webpack://Shared/./src/hoc/build-page-list/defaultDialog.tsx","webpack://Shared/./src/hoc/build-page-list/index.tsx","webpack://Shared/./src/hoc/build-page-list/sx.ts","webpack://Shared/./src/hoc/buildEntityPage.tsx","webpack://Shared/./src/hoc/buildPageForm.tsx","webpack://Shared/./src/hoc/index.ts","webpack://Shared/./src/index.ts","webpack://Shared/./src/utils/api.ts","webpack://Shared/./src/utils/endpoints.ts","webpack://Shared/./src/utils/hooks.ts","webpack://Shared/./src/utils/index.ts","webpack://Shared/./src/utils/intl.tsx","webpack://Shared/./src/utils/localStorage.ts","webpack://Shared/./src/utils/utils.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Shared\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Shared\"] = factory();\n\telse\n\t\troot[\"Shared\"] = factory();\n})(self, () => {\nreturn ","// Libraries\nimport React from 'react'\nimport map from 'lodash/map'\n\n// Material Components\nimport Accordion, { AccordionProps } from '@mui/material/Accordion'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport Paper from '@mui/material/Paper'\nimport Box from '@mui/material/Box'\n\n// Icons\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\ninterface ItemsProps extends AccordionProps {\n  name: string\n}\n\nexport interface SharedAccordionProps {\n  /**\n     * Array of {name, children}\n     *\n     * @param {string} name: title of accordion tab\n     * @param {ReactElement} children: component will be inside of accordion tab\n     */\n  items: ItemsProps[]\n}\n\nconst SharedAccordionComponent: React.FC<SharedAccordionProps> = ({ items }) => {\n  // const classes = useStyles()\n\n  return (\n    <Paper>\n      {map(items, ({ name, children, ...props }, itemIdx) => (\n        <Accordion\n          key={`common-accordion-item-${itemIdx}`}\n          {...props}\n        >\n          <AccordionSummary\n            aria-controls={`panel${itemIdx}a-content`}\n            expandIcon={<ExpandMoreIcon />}\n            id={`panel${itemIdx}a-header`}\n          >\n            <Box sx={{ textTransform: 'capitalize' }}>\n              {name}\n            </Box>\n          </AccordionSummary>\n\n          <AccordionDetails>\n            <Box>\n              {children}\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n      ))}\n    </Paper>\n  )\n}\n\nexport const SharedAccordion = React.memo(SharedAccordionComponent)\n","// Libraries\nimport React, { useState, useCallback } from 'react'\n\n// Material components\nimport Box from '@mui/material/Box'\nimport Fab from '@mui/material/Fab'\nimport TextField from '@mui/material/TextField'\n\n// Icons\nimport AddIcon from '@mui/icons-material/Add'\nimport RemoveIcon from '@mui/icons-material/Remove'\n\n// Shared\nimport { onlyText } from '../utils'\n\ninterface AmountComponentProps {\n  onPlus: (value: number) => void\n  onMinus: (value: number) => void\n  maxValue: number\n}\n\nconst AmountComponent: React.FC<AmountComponentProps> = ({ onPlus, onMinus, maxValue }) => {\n  const [amount, setAmount] = useState(1)\n\n  const handlePlus = useCallback(() => {\n    setAmount(value => {\n      if (value < maxValue) {\n        value = value + 1\n        onPlus(value)\n      }\n      return value\n    })\n  }, [onPlus, maxValue])\n\n  const handleMinus = useCallback(() => {\n    setAmount(value => {\n      if (amount > 1) {\n        value = value - 1\n        onMinus(value)\n      }\n      return value\n    })\n  }, [amount, onMinus])\n\n  return (\n    <Box sx={{ my: 2, alignItems: 'center', justifyContent: 'center', display: 'flex' }}>\n      <Fab\n        aria-label='remove 1 unit amount'\n        color='secondary'\n        onClick={handleMinus}\n        size='small'\n      >\n        <RemoveIcon fontSize='small' />\n      </Fab>\n\n      <Box sx={{ px: 1, width: '30%' }}>\n        <TextField\n          label={onlyText('FORM.LABEL.AMOUNT')}\n          variant='outlined'\n          value={amount}\n          disabled\n          size='small'\n        />\n      </Box>\n\n      <Fab\n        aria-label='add 1 unit amount'\n        color='primary'\n        onClick={handlePlus}\n        size='small'\n      >\n        <AddIcon fontSize='small' />\n      </Fab>\n    </Box>\n\n  )\n}\n\nexport const SharedAmount = React.memo(AmountComponent)\n","// Libraries\nimport React, { useState, useCallback } from 'react'\n\n// Material Components\nimport AppBar from '@mui/material/AppBar'\nimport IconButton from '@mui/material/IconButton'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n\n// Icons\nimport MenuIcon from '@mui/icons-material/Menu'\n\n// Shared\nimport { useAppContext } from '../../hoc'\nimport { Link } from '../link'\n\n// Components\nimport Menu from './menu'\n\n// Styles\nimport { sxAppBar, sxLinkHome } from './sx'\n\n// Icon\n// eslint-disable-next-line @typescript-eslint/no-var-requires\n// const icon = require('../../assets/logo-icon.png').default\nconst icon = ''\n// import {OverridableComponent} from \"@mui/material/OverridableComponent\";\n// import {SvgIconTypeMap} from \"@mui/material\";\n\n// Interfaces\n// import { MainAppHookProps } from '../../hoc/appRoutes'\nexport interface MenuItemsProps {\n  name: string\n  // icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">> & { muiName: string}\n  // icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">> & { muiName: string; }\n  icon: any\n  path: string\n  divider?: boolean\n}\n\ninterface ButtonAppBarProps {\n  mainAppHook: any\n}\n\nconst ButtonAppBar: React.FC<ButtonAppBarProps> = ({ mainAppHook }) => {\n  const { pageTitle } = useAppContext()\n  const { menuItems } = mainAppHook()\n  const [isMenuOpen, setOpenMenu] = useState(false)\n\n  const handleClick = useCallback(() => setOpenMenu(!isMenuOpen), [isMenuOpen])\n\n  return (\n    <>\n      <AppBar sx={sxAppBar} position='fixed'>\n        <Toolbar>\n          <Link sx={sxLinkHome} to='/'>\n            <img src={icon} alt='icon' />\n          </Link>\n\n          <Typography sx={{ flexGrow: 1 }} color='secondary' variant='h6'>\n            {pageTitle}\n          </Typography>\n\n          <IconButton className='menu-icon-button' aria-label='menu' edge='end' onClick={handleClick}>\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Menu menuItems={menuItems} onCloseMenu={() => setOpenMenu(false)} isMenuOpen={isMenuOpen} />\n    </>\n  )\n}\n\nexport default React.memo(ButtonAppBar)\n","// Libraries\nimport React, { Fragment, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\n\n// Material Components\nimport Divider from '@mui/material/Divider'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListSubheader from '@mui/material/ListSubheader'\n\n// Intl\nimport { Intl, onlyText } from '../../utils'\n\n// Styles\nimport { sxSubHeader } from './sx'\n\n// interfaces\nimport { MenuItemsProps } from './'\n\ninterface MenuProps {\n  isMenuOpen: boolean\n  onCloseMenu: any\n  menuItems: MenuItemsProps[]\n}\n\nconst container = window !== undefined ? () => window.document.body : undefined\n\nconst Menu: React.FC<MenuProps> = ({ isMenuOpen, onCloseMenu, menuItems }) => {\n  const renderMenuItems = useMemo(() => {\n    const subheader = (\n      <ListSubheader sx={sxSubHeader}>\n        <Intl langKey='MENU.WELCOME' variant='h6' paragraph style={{ marginTop: '16px' }} />\n      </ListSubheader>\n    )\n\n    const items = menuItems.map(({ name, icon: Icon, path, divider = false }) => {\n      return (\n        <Fragment key={`menu-list-item-to-${path}`}>\n          <ListItem button component={Link} onClick={onCloseMenu} to={path}>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={onlyText(name)} />\n          </ListItem>\n\n          {divider && <Divider />}\n        </Fragment>\n      )\n    })\n\n    return (\n      <List subheader={subheader} sx={{ mt: 6 }}>\n        {items}\n      </List>\n    )\n  }, [menuItems, onCloseMenu])\n\n  return (\n    <Drawer\n      sx={{ mt: 6, bgcolor: 'primary.main', '& .MuiListItemText-primary': { color: 'rgba(0, 0, 0, 0.87)' } }}\n      container={container}\n      anchor='right'\n      variant='temporary'\n      open={isMenuOpen}\n      onClose={onCloseMenu}\n      ModalProps={{\n        keepMounted: true\n      }}\n    >\n      {renderMenuItems}\n    </Drawer>\n  )\n}\n\nexport default React.memo(Menu)\n","import { SxProps } from '@mui/system'\n\nexport const sxSubHeader: SxProps = {\n  paddingTop: 2,\n  paddingBottom: 2,\n  backgroundColor: 'primary.dark'\n}\n\nexport const sxAppBar: SxProps = {\n  zIndex: 'modal',\n  bgcolor: 'background.paper',\n  '& .MuiToolbar-root': {\n    minHeight: '50px'\n  }\n}\n\nexport const sxLinkHome: SxProps = {\n  marginTop: '5px',\n  marginRight: 2,\n  '& img': {\n    width: '26px'\n  }\n}\n","import React, { useCallback, useRef, useState, useEffect, SyntheticEvent } from 'react'\nimport debounce from 'lodash/debounce'\nimport get from 'lodash/get'\n\n// Material\nimport MaterialAutocomplete, { AutocompleteChangeDetails, AutocompleteChangeReason, AutocompleteInputChangeReason } from '@mui/material/Autocomplete'\nimport TextField from '@mui/material/TextField'\nimport CircularProgress from '@mui/material/CircularProgress'\n\n// Shared\nimport { useLabel } from '../utils'\n\n// Interfaces\nexport interface AutocompleteProps{\n  freeSolo?: boolean\n  startAdornment?: any\n  getOptionLabel?: any\n  onChange?: any\n  options?: any\n  renderOption?: any\n  value?: any\n  useQuery?: any\n  inputProps: {\n    label: string | (() => string)\n    error?: any\n    helpText?: string\n    value?: any\n    incomingValue?: any\n  }\n  renderProps?: any\n  useFormProps?: any\n  sx?: {[k: string]: any}\n  size?: 'small' | 'medium'\n}\n\ntype DefaultUseQueryProps = () => {\n  isLoading: boolean\n  data: any\n  refetch: () => void\n}\n\ntype HandleInputChangeProps = (event: React.SyntheticEvent<Element, Event>, value: string, reason: AutocompleteInputChangeReason) => void\ntype HandleChangeProps = (event: SyntheticEvent<Element, Event>, value: any, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<any> | undefined) => void\n\nconst defaultUseQuery: DefaultUseQueryProps = () => {\n  return {\n    isLoading: false,\n    data: [],\n    refetch: () => { }\n  }\n}\n\nconst SharedAutocomplete: React.FC<AutocompleteProps> = ({\n  useQuery = defaultUseQuery,\n  options = [],\n  startAdornment,\n  inputProps,\n  renderProps,\n  onChange,\n  value: fieldValue,\n  useFormProps, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ...props\n}) => {\n  const { field: fieldProps, fieldState: { error } } = renderProps\n  const { onChange: onChangeField } = fieldProps\n  const { label, helpText, incomingValue } = inputProps\n\n  const [autocompleteValue, setAutocompleteValue] = useState(fieldValue)\n  const [inputValue, setInputValue] = useState('')\n  const [inputOptions, setInputOptions] = useState(options)\n\n  const { isLoading, data, refetch } = useQuery({ params: { key: inputValue } }, { enabled: false })\n\n  const debounceSearch = useRef(debounce(\n    () => refetch(),\n    1500\n  ))\n\n  const renderLabel = useLabel(label)\n\n  const renderInput = useCallback((params: any) => {\n    return (\n      <TextField\n        {...params}\n        label={renderLabel}\n        InputProps={{\n          ...params.InputProps,\n          startAdornment: startAdornment,\n          endAdornment: (\n            <>\n              {Boolean(isLoading) && (<CircularProgress color='inherit' size={20} />)}\n              {params.InputProps?.endAdornment}\n            </>\n          )\n        }}\n        error={Boolean(error)}\n        helperText={get(error, 'message', helpText)}\n      />\n    )\n  }, [startAdornment, error, renderLabel, helpText, isLoading])\n\n  const handleChange = useCallback<HandleChangeProps>((_evt, value) => {\n    onChangeField(value)\n    setAutocompleteValue(value)\n\n    if (typeof onChange === 'function') {\n      onChange(value)\n    }\n  }, [onChange])// eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleInputChange = useCallback<HandleInputChangeProps>((_evt, value) => {\n    setInputValue(value)\n    onChangeField(value)\n\n    if (value.length < 2) {\n      return undefined\n    }\n    debounceSearch.current()\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n  // if a value is updated\n  useEffect(() => {\n    if (incomingValue === undefined || incomingValue === null) return undefined\n    setInputValue(incomingValue)\n\n    onChangeField(incomingValue)\n  }, [incomingValue])// eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (Object.is(useQuery, defaultUseQuery)) {\n      return undefined\n    }\n\n    if (data?.data?.length > 0) {\n      setInputOptions(data.data)\n    }\n  }, [data, useQuery])\n\n  return (\n    <MaterialAutocomplete\n      {...props}\n      value={autocompleteValue}\n      inputValue={inputValue}\n      disablePortal\n      filterOptions={(x) => x}\n      options={inputOptions}\n      renderInput={renderInput}\n      onInputChange={handleInputChange}\n      onChange={handleChange}\n      loading={isLoading}\n      sx={{ width: 1, ...props.sx }}\n    />\n  )\n}\n\nexport const Autocomplete = React.memo(SharedAutocomplete)\n","import React, { ReactElement } from 'react'\nimport {\n  ControllerRenderProps, UseFormStateReturn, ControllerFieldState\n} from 'react-hook-form'\n\n// Material Components\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport { SvgIconTypeMap } from '@mui/material'\nimport { OverridableComponent } from '@mui/material/OverridableComponent'\nimport { SxProps } from '@mui/system'\n\n// Inputs\nimport TextField from './textField'\nimport Radio from './radio'\nimport Select from './select'\nimport SelectMultiple from './selectMultiple'\nimport DatePicker from './datePicker'\nimport NumberFormat from './numberFormat'\nimport Checkbox from './checkbox'\n\n// Interfaces\ntype HTMLTypeProps = 'checkbox' | 'radio' | 'select' | 'selectMultiple' | 'text' | 'textarea' | 'password' | 'email' | 'number'\ntype SharedTypeProps = 'numberFormat' | 'divider' | 'datePicker' | 'component'\ntype TypeProps = HTMLTypeProps | SharedTypeProps\n\nexport interface InputProps {\n  type: TypeProps\n  name: string\n  label: string | (() => string)\n  yupValidation?: any\n  icon?: OverridableComponent<SvgIconTypeMap>\n  defaultValue?: any\n  sx?: SxProps\n  className?: string\n  error?: boolean\n  errors?: { [key: string]: string }\n  parentBox?: { [key: string]: any }\n  helpText?: string\n  disabled?: boolean\n  InputProps?: any\n  multiline?: boolean\n  multiple?: boolean\n  required?: boolean\n  rows?: number\n  items?: Array<{ label: string | (() => string), value: string | number, disabled?: boolean }>\n  tooltip?: string\n  component?: any\n  onChange?: any\n  value?: any\n  incomingValue?: any\n  showInput?: boolean\n}\n\nexport interface RenderProps {\n  field: ControllerRenderProps<{ [p: string]: any }, string>\n  fieldState: ControllerFieldState\n  formState: UseFormStateReturn<{ [p: string]: any }>\n}\n\nexport interface BuildInputProps {\n  renderProps: RenderProps\n  inputProps: InputProps\n  useFormProps?: any\n}\n\nexport const defaultInputProps: BuildInputProps = {\n  renderProps: {\n    field: {\n      onChange: () => { },\n      value: '',\n      onBlur: () => { },\n      ref: () => { },\n      name: ''\n    },\n    fieldState: {\n      error: undefined,\n      invalid: false,\n      isTouched: false,\n      isDirty: false\n    },\n    formState: {\n      isDirty: false,\n      dirtyFields: {},\n      isSubmitted: false,\n      isSubmitSuccessful: false,\n      submitCount: 0,\n      touchedFields: {},\n      isSubmitting: false,\n      isValidating: false,\n      isValid: true,\n      errors: {}\n    }\n  },\n  inputProps: {\n    type: 'text' as const,\n    name: '',\n    label: ''\n  }\n}\n\nconst BuildInputComponent: React.FC<BuildInputProps> = (props: BuildInputProps): ReactElement => {\n  switch (props.inputProps.type) {\n    case 'checkbox':\n      return (<Checkbox {...props} />)\n    case 'numberFormat':\n      return (<NumberFormat {...props} />)\n    case 'divider':\n      return (<Box sx={{ mt: 2, mb: 2 }}> <Divider /> </Box>)\n    case 'datePicker':\n      return (<DatePicker {...props} />)\n    case 'radio':\n      return (<Radio {...props} />)\n    case 'select':\n      return (<Select {...props} />)\n    case 'selectMultiple':\n      return (<SelectMultiple {...props} />)\n    case 'component':\n      if (props.inputProps.component !== undefined) return props.inputProps.component(props)\n\n      return (<span>______NO_COMPONENT______</span>)\n    default:\n      return (<TextField {...props} />)\n  }\n}\n\nexport const BuildInput = React.memo(BuildInputComponent)\n\nexport default BuildInput\n","import React, { useMemo, useCallback, useEffect, useState } from 'react'\nimport isEqual from 'lodash/isEqual'\n\n// Material Components\nimport Box from '@mui/material/Box'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormHelperText from '@mui/material/FormHelperText'\n\nimport { BuildInputProps } from './buildInput'\nimport { usePreviousValue, useLabel } from '../../utils'\n\nconst SharedCheckbox: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field: {\n      onChange: onChangeField,\n      ...field\n    },\n    fieldState: { error }\n  },\n  inputProps: {\n    sx = {},\n    label,\n    helpText,\n    onChange,\n    disabled = false,\n    value\n  }\n}) => {\n  const previousValue = usePreviousValue(value)\n\n  const [checked, setChecked] = useState((field.value !== undefined && field.value) || value || false)\n\n  const handleChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = evt.target\n\n    setChecked(checked)\n    onChangeField(checked)\n\n    if (typeof onChange === 'function') {\n      onChange(checked)\n    }\n  }, [onChange]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderHelpText = useMemo(() => {\n    if (error != null) {\n      return (\n        <FormHelperText>\n          {error.message}\n        </FormHelperText>\n      )\n    }\n    if (helpText !== undefined) {\n      return (\n        <FormHelperText>\n          {helpText}\n        </FormHelperText>\n      )\n    }\n  }, [error, helpText])\n\n  const renderLabel = useLabel(label)\n\n  useEffect(() => {\n    if (!isEqual(previousValue, value)) {\n      setChecked(value)\n      onChangeField(value)\n    }\n  }, [previousValue, value])// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Box sx={sx}>\n      <FormGroup>\n        <FormControlLabel\n          control={(\n            <Checkbox\n              disabled={disabled}\n              checked={checked}\n              onChange={handleChange}\n            />)}\n          label={renderLabel}\n        />\n      </FormGroup>\n      {renderHelpText}\n    </Box>\n  )\n}\n\nexport default React.memo(SharedCheckbox)\n","// Libraries\nimport React from 'react'\n\n// Material Components\nimport TextField from '@mui/material/TextField'\nimport MobileDatePicker from '@mui/lab/MobileDatePicker'\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\n\n// Shared\nimport { useLabel } from '../../utils'\nimport { BuildInputProps } from './buildInput'\n\nconst SharedDatePicker: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field\n  },\n  inputProps: {\n    label\n  }\n}) => {\n  const renderLabel = useLabel(label)\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <MobileDatePicker\n        {...field}\n        label={renderLabel}\n        inputFormat='yyyy-MM-dd'\n        renderInput={(params) => <TextField {...params} sx={{ width: 1 }} />}\n      />\n    </LocalizationProvider>\n  )\n}\n\nexport default React.memo(SharedDatePicker)\n","// Libraries\nimport React, { useCallback, useEffect, useMemo, useState, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { object } from 'yup'\n\n// Lodash\nimport reduce from 'lodash/reduce'\nimport map from 'lodash/map'\nimport isEmpty from 'lodash/isEmpty'\nimport each from 'lodash/each'\n\n// Material Components\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Tooltip from '@mui/material/Tooltip'\n\n// Intl\nimport { Intl, onlyText } from '../../utils'\n\n// Build Input\nimport BuildInput, { InputProps, RenderProps } from './buildInput'\n\n// #region\n\n// Types\ninterface tAnyObject {\n  [key: string]: any\n}\n\n// Interfaces\nexport interface BuildFormInputProps {\n  name: string\n  showInput?: boolean\n  tooltip?: string\n  parentBox: { [key: string]: string }\n}\n\nexport interface InputsFormConfigProps { [key: string]: InputProps }\n\nexport interface BuildFormProps {\n  loading?: boolean\n  noBackButton?: boolean\n  backTo?: string | null\n  disabled?: boolean\n  confirmButtonLangkey?: string\n  inputsFormConfig: InputsFormConfigProps\n  responseErrors?: { [key: string]: string }\n  onSubmit: (arg0: tAnyObject) => void\n  defaultSuccessMessage?: boolean\n}\n\ntype RenderBuildInputProps = (renderPros: RenderProps, inputProps: InputProps) => any\n\n// #endregion\n\nconst CreateFormContainer: React.FC<BuildFormProps> = ({\n  loading,\n  noBackButton = false,\n  backTo = '',\n  disabled,\n  confirmButtonLangkey = '',\n  inputsFormConfig,\n  responseErrors,\n  onSubmit\n}) => {\n  const navigate = useNavigate()\n  const formValues = useRef<any>()\n\n  const [validationSchema]: [any, any] = useState(() => {\n    const fields: { [key: string]: any } = reduce(inputsFormConfig, (prev, { name, yupValidation }) => ({\n      ...prev,\n      [name]: yupValidation\n    }), {})\n\n    return object().shape(fields)\n  })\n\n  const handleBackAction = useCallback(() => {\n    if (typeof backTo === 'string') {\n      navigate(backTo)\n    } else {\n      navigate(-1)\n    }\n  }, [navigate, backTo])\n\n  const {\n    control,\n    handleSubmit,\n    setError,\n    ...useFormProps\n  } = useForm<{ [key: string]: any }>({ resolver: yupResolver(validationSchema) })\n\n  if (process.env.NODE_ENV === 'development') {\n    formValues.current = useFormProps.getValues() // debug form values in component\n  }\n\n  const renderBuildInput = useCallback<RenderBuildInputProps>((renderProps, inputProps) => {\n    return (\n      <BuildInput renderProps={renderProps} inputProps={inputProps} useFormProps={useFormProps} />\n    )\n  }, [useFormProps])\n\n  const buildForm = useMemo(() => {\n    return map(inputsFormConfig, ({\n      showInput = true,\n      tooltip,\n      parentBox = {},\n      yupValidation, //eslint-disable-line\n      ...inputProps\n    }: BuildFormInputProps & InputProps, key) => {\n      if (!showInput) {\n        return null\n      }\n\n      const buildInputController = (\n        <Controller\n          key={key}\n          name={inputProps.name}\n          control={control}\n          render={(renderProps) => renderBuildInput(renderProps, inputProps)}\n        />\n      )\n\n      if (tooltip !== undefined) {\n        return (\n          <Box key={key} mt={1} {...parentBox}>\n            <Tooltip title={onlyText(tooltip)} arrow placement='top'>\n              <div>\n                {buildInputController}\n              </div>\n            </Tooltip>\n          </Box>\n        )\n      }\n\n      return (\n        <Box key={key} mt={1} {...parentBox}>\n          {buildInputController}\n        </Box>\n      )\n    }\n    )\n  }, [inputsFormConfig, control, renderBuildInput])\n\n  const backButton = useMemo(() => {\n    if (noBackButton) return null\n\n    return (\n      <Box mr={3}>\n        <Button\n          disabled={loading}\n          variant='contained'\n          color='secondary'\n          onClick={handleBackAction}\n          disableElevation\n        >\n          <Intl langKey='GENERAL.BACK' />\n        </Button>\n      </Box>\n    )\n  }, [noBackButton, handleBackAction, loading])\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && !isEmpty(useFormProps?.formState?.errors)) {\n      console.log('useFormProps', useFormProps.getValues())\n      console.log('errors in form', useFormProps.formState.errors)\n    }\n  }, [useFormProps])\n\n  useEffect(() => {\n    if (!isEmpty(responseErrors)) {\n      each(responseErrors, (error, name) => {\n        setError(name, { type: 'error', message: onlyText(`SERVER.VALIDATION.ERROR.${error[0]}`) })\n      })\n    }\n  }, [responseErrors, setError])\n\n  const isButtonSubmitDisabled = Boolean(loading) || Boolean(disabled) || !useFormProps.formState.isDirty\n\n  return (\n    <form autoComplete='off' data-testid='form' onSubmit={handleSubmit(onSubmit)}>\n      <Box>\n        {buildForm}\n      </Box>\n\n      <Box\n        display='flex'\n        justifyContent={noBackButton ? 'flex-end' : 'space-between'}\n        pb={4}\n        pt={6}\n      >\n        {backButton}\n        <Button\n          color='primary'\n          disableElevation\n          disabled={isButtonSubmitDisabled}\n          type='submit'\n          variant='contained'\n        >\n          {Boolean(loading) &&\n            <CircularProgress\n              data-testid='circular-progress'\n              size={20}\n            />}\n\n          <Intl langKey={confirmButtonLangkey} />\n        </Button>\n      </Box>\n    </form>\n  )\n}\n\nexport const CreateForm = React.memo(CreateFormContainer)\n","import React from 'react'\n\nimport NumberFormat, { NumberFormatProps } from 'react-number-format'\n\nimport TextField from './textField'\nimport { BuildInputProps } from './buildInput'\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string, value: string } }) => void\n  name: string\n}\n\nconst NumberFormatCustom = React.forwardRef<NumberFormatProps, CustomProps>(({ onChange, ...props }, ref) => {\n  return (\n    <NumberFormat\n      {...props}\n      getInputRef={ref}\n      onValueChange={({ value }) => {\n        onChange({\n          target: {\n            name: props.name,\n            value\n          }\n        })\n      }}\n      thousandSeparator='.'\n      decimalSeparator=','\n      isNumericString\n    />\n  )\n})\n\nNumberFormatCustom.displayName = 'NumberFormatCustom'\n\nconst SharedNumberFormatComponent: React.FC<BuildInputProps> = ({ renderProps, inputProps }) => {\n  return (\n    <TextField\n      renderProps={renderProps}\n      inputProps={{\n        ...inputProps,\n        InputProps: {\n          inputComponent: NumberFormatCustom as any\n        }\n      }}\n    />\n  )\n}\n\nexport const SharedNumberFormat = React.memo(SharedNumberFormatComponent)\n\nexport default React.memo(SharedNumberFormatComponent)\n","import React, { useCallback, useMemo, useEffect, useState } from 'react'\nimport isEqual from 'lodash/isEqual'\n\n// Material Components\nimport Radio from '@mui/material/Radio'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\n\n// Shared\nimport { BuildInputProps } from './buildInput'\nimport { onlyText, usePreviousValue, useLabel } from '../../utils'\n\nconst SharedRadio: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field: {\n      onChange: onChangeField,\n      ...field\n    },\n    fieldState: { error }\n  },\n  inputProps: {\n    label,\n    helpText,\n    items,\n    onChange,\n    value\n  }\n}) => {\n  const previousValue = usePreviousValue(value)\n\n  const [inputValue, setInputValue] = useState('')\n\n  const handleChangeInputValue = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.target\n    onChangeField(value)\n    setInputValue(value)\n\n    if (typeof onChange === 'function') {\n      onChange(value)\n    }\n  }, [onChange]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderOptions = useMemo(() => {\n    if (items == null) return null\n\n    return items.map(({ value, label }) => {\n      const renderLabel = typeof label === 'function' ? label() : label\n      return (\n        <FormControlLabel key={renderLabel} value={value} control={<Radio />} label={onlyText(renderLabel)} />\n      )\n    })\n  }, [items])\n\n  const renderHelpText = useMemo(() => {\n    if (error != null) {\n      return (\n        <FormHelperText>\n          {error.message}\n        </FormHelperText>\n      )\n    }\n    if (helpText !== undefined) {\n      return (\n        <FormHelperText>\n          {helpText}\n        </FormHelperText>\n      )\n    }\n  }, [error, helpText])\n\n  const renderLabel = useLabel(label)\n\n  useEffect(() => {\n    if (!isEqual(previousValue, value)) {\n      onChangeField(value)\n      setInputValue(value)\n    }\n  }, [previousValue, value])// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <FormControl component='fieldset' error={Boolean(error)}>\n      <FormLabel component='legend'>{renderLabel}</FormLabel>\n      <RadioGroup\n        {...field}\n        value={inputValue}\n        onChange={handleChangeInputValue}\n      >\n        {renderOptions}\n      </RadioGroup>\n      {renderHelpText}\n    </FormControl>\n  )\n}\n\nexport default React.memo(SharedRadio)\n","import React, { useCallback, useMemo, useEffect, useState } from 'react'\nimport isArray from 'lodash/isArray'\nimport isEqual from 'lodash/isEqual'\n\n// Material Components\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormHelperText from '@mui/material/FormHelperText'\n\n// Shared\nimport { BuildInputProps } from './buildInput'\nimport { onlyText, usePreviousValue, useLabel } from '../../utils'\n\nconst SharedSelect: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field: {\n      onChange: onChangeField,\n      ...field\n    },\n    fieldState: { error }\n  },\n  inputProps: {\n    label,\n    helpText,\n    required,\n    items = [],\n    onChange,\n    disabled,\n    value\n  }\n}) => {\n  const previousValue = usePreviousValue(value)\n\n  const [inputValue, setInputValue] = useState('')\n\n  const handleOnChange = useCallback((evt: SelectChangeEvent) => {\n    const { value } = evt.target\n\n    onChangeField(value)\n    setInputValue(value)\n\n    if (typeof onChange === 'function') {\n      onChange(value)\n    }\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderOptions = useMemo(() => {\n    return items.map(({ label, value, disabled = false }) => {\n      const renderLabel = typeof label === 'function' ? label() : label\n      return (\n        <MenuItem key={renderLabel} value={value} disabled={disabled}>{renderLabel}</MenuItem>\n      )\n    })\n  }, [items])\n\n  const renderValue = useCallback((selected: any) => {\n    if (items.length === 0) return ''\n\n    const item = items.find(({ value }) => value === selected)\n\n    if (item?.label === undefined) return ''\n\n    return typeof item.label === 'function' ? item.label() : item.label\n  }, [items])\n\n  const renderHelpText = useMemo(() => {\n    if (error != null) {\n      const message = isArray(error) ? error[0].message : error.message\n      return (<FormHelperText>{message}</FormHelperText>)\n    }\n\n    if (helpText !== undefined) {\n      return (<FormHelperText>{helpText}</FormHelperText>)\n    }\n  }, [error, helpText])\n\n  const renderLabel = useLabel(label)\n\n  useEffect(() => {\n    if (!isEqual(previousValue, value)) {\n      onChangeField(value)\n      setInputValue(value)\n    }\n  }, [previousValue, value]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <FormControl fullWidth error={Boolean(error)} required={required} sx={{ mt: 2 }}>\n      <InputLabel sx={{ bgcolor: 'white', px: 1 }} id={`id-select-${renderLabel.toLowerCase()}`}>{renderLabel}</InputLabel>\n      <Select\n        {...field}\n        labelId={`id-select-${renderLabel.toLowerCase()}`}\n        disabled={disabled}\n        value={inputValue}\n        renderValue={renderValue}\n        onChange={handleOnChange}\n      >\n        <MenuItem>\n          <em>{onlyText('FORM.LABEL.DEFAULT_SELECT')}</em>\n        </MenuItem>\n        {renderOptions}\n      </Select>\n      {renderHelpText}\n    </FormControl>\n  )\n}\n\nexport default React.memo(SharedSelect)\n","import React, { useCallback, useMemo, useState, useEffect } from 'react'\nimport isEqual from 'lodash/isEqual'\nimport isArray from 'lodash/isArray'\n\n// Material Components\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport ListItemText from '@mui/material/ListItemText'\nimport Checkbox from '@mui/material/Checkbox'\nimport Box from '@mui/material/Box'\nimport Chip from '@mui/material/Chip'\n\n// Shared\nimport { BuildInputProps } from './buildInput'\nimport { onlyText, usePreviousValue, useLabel } from '../../utils'\n\nconst SharedSelectMultiple: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field: {\n      onChange: onChangeField,\n      ...field\n    },\n    fieldState: { error }\n  },\n  inputProps: {\n    label,\n    helpText,\n    required,\n    items = [],\n    onChange,\n    disabled,\n    value\n  }\n}) => {\n  const previousValue = usePreviousValue(value)\n\n  const [inputValue, setInputValue] = useState(value)\n\n  const handleOnChange = useCallback((evt: SelectChangeEvent) => {\n    const { value } = evt.target\n\n    setInputValue(value)\n    onChangeField(value)\n\n    if (typeof onChange === 'function') {\n      onChange(value)\n    }\n  }, [onChange])// eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderOptions = useMemo(() => {\n    return items.map(({ label, value }) => {\n      const checked = inputValue.includes(value)\n      const renderLabel = typeof label === 'function' ? label() : label\n\n      return (\n        <MenuItem key={renderLabel} value={value}>\n          <Checkbox checked={checked} />\n          <ListItemText primary={renderLabel} />\n        </MenuItem>\n      )\n    })\n  }, [items, inputValue])\n\n  const renderValue = useCallback((selected: any) => {\n    return (\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n        {items\n          .filter(({ value }) => selected.includes(value))\n          .map(({ label }: { label: string | (() => string) }) => {\n            const renderLabel = typeof label === 'function' ? label() : label\n            return (\n              <Chip key={renderLabel} label={renderLabel} />\n            )\n          })}\n      </Box>\n    )\n  }, [items])\n\n  const renderHelpText = useMemo(() => {\n    if (error != null) {\n      const message = isArray(error) ? error[0].message : error.message\n      return (<FormHelperText>{message}</FormHelperText>)\n    }\n\n    if (helpText !== undefined) {\n      return (<FormHelperText>{helpText}</FormHelperText>)\n    }\n  }, [error, helpText])\n\n  const renderLabel = useLabel(label)\n\n  useEffect(() => {\n    if (!isEqual(previousValue, value)) {\n      onChangeField(value)\n      setInputValue(value)\n    }\n  }, [previousValue, value]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <FormControl fullWidth error={Boolean(error)} required={required} sx={{ mt: 2 }}>\n      <InputLabel sx={{ bgcolor: 'white', px: 1 }} id={`id-select-multiple-${renderLabel.toLowerCase()}`}>{renderLabel}</InputLabel>\n      <Select\n        {...field}\n        labelId={`id-select-multiple-${renderLabel.toLowerCase()}`}\n        disabled={disabled}\n        multiple\n        value={inputValue}\n        defaultValue={value}\n        renderValue={renderValue}\n        onChange={handleOnChange}\n      >\n        <MenuItem>\n          <em>{onlyText('FORM.LABEL.DEFAULT_SELECT')}</em>\n        </MenuItem>\n        {renderOptions}\n      </Select>\n      {renderHelpText}\n    </FormControl>\n  )\n}\n\nexport default React.memo(SharedSelectMultiple)\n","export const sxTextField = ({\n  paper: {\n    padding: 2\n  },\n  textField: {\n    marginBottom: 2,\n    '& label': {\n      marginLeft: 3,\n      textTransform: 'capitalize'\n    }\n  }\n})\n\nexport const sxSelect = ({\n  select: {\n    // position: 'relative',\n    width: '100%',\n    marginBottom: 2,\n    '& .MuiInputLabel-filled': {\n      marginLeft: 3\n    },\n    '& .MuiSelect-root.MuiSelect-select': {\n      marginLeft: 4\n    },\n    '& .MuiSelect-select em': {\n      fontSize: '14px'\n    },\n    '& .MuiFormLabel-root.MuiInputLabel-root': {\n      marginLeft: 3\n    },\n    '& .MuiFilledInput-input': {\n      fontSize: '14px',\n      marginLeft: 4,\n      padding: '20px 12px 10px'\n    }\n  }\n})\n\nexport const sxIcon = {\n  // position: 'absolute',\n  zIndex: 3\n  // top: '20px'\n}\n\nexport const sxDatePicker = ({\n  root: {\n    position: 'relative',\n    '& .MuiInputLabel-root': {\n      marginLeft: 3,\n      position: 'absolute'\n    }\n  },\n  icon: {\n    position: 'absolute',\n    zIndex: 3,\n    top: '19px',\n    '&:before': {\n      left: 0,\n      right: 0,\n      bottom: 0,\n      content: '\"\\\\00a0\"',\n      position: 'absolute',\n      transition: ' border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n      pointerEvents: 'none'\n    }\n  },\n  dateInputs: {\n    marginTop: 2,\n    marginLeft: 3,\n    display: 'flex',\n    '& .MuiInput-root': {\n      marginRight: 2\n    }\n  },\n  dateYear: {\n    '& input': {\n      paddingLeft: '4px'\n    }\n  }\n})\n","// Libraries\nimport React, { useMemo, useCallback, useEffect, useState } from 'react'\nimport _ from 'lodash'\n\n// Material Components\nimport { red } from '@mui/material/colors'\nimport TextField from '@mui/material/TextField'\nimport InputAdornment from '@mui/material/InputAdornment'\n\n// Shared\nimport { usePreviousValue, useLabel } from '../../utils'\n\n// Icons\nimport Error from '@mui/icons-material/Error'\n\nimport { BuildInputProps } from './buildInput'\n\n// Styles\nimport { sxTextField } from './styles'\n\nconst SharedTextField: React.FC<BuildInputProps> = ({\n  renderProps: {\n    field: {\n      onChange: onChangeField,\n      ...field\n    },\n    fieldState: { error }\n  },\n  inputProps: {\n    sx = {},\n    label,\n    helpText,\n    InputProps = {},\n    icon,\n    onChange,\n    value,\n    ...inputProps\n  }\n}) => {\n  const previousValue = usePreviousValue(value)\n\n  const [inputValue, setInputValue] = useState('')\n\n  const renderStartAdornment = useMemo(() => {\n    if (icon == null) return undefined\n\n    const Icon = icon\n\n    return (\n      <InputAdornment position='start'>\n        <Icon color='action' />\n      </InputAdornment>\n    )\n  }, [icon])\n\n  const renderEndAdornment = useMemo(() => {\n    if (error == null) return undefined\n\n    return (\n      <InputAdornment position='end'>\n        <Error sx={{ fontSize: 16, color: red[400] }} />\n      </InputAdornment>\n    )\n  }, [error])\n\n  const handleChange = useCallback((evt: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { value } = evt.target\n    onChangeField(value)\n    setInputValue(value)\n\n    if (typeof onChange === 'function') {\n      onChange(value)\n    }\n  }, [onChange]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderLabel = useLabel(label)\n\n  useEffect(() => {\n    if (!_.isEqual(previousValue, value)) {\n      onChangeField(value)\n      setInputValue(value)\n    }\n  }, [previousValue, value]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <TextField\n      {...inputProps}\n      {...field}\n      onChange={handleChange}\n      value={inputValue}\n      fullWidth\n      margin='normal'\n      sx={{ ...sxTextField, ...sx }}\n      label={renderLabel}\n      error={Boolean(error)}\n      helperText={_.get(error, 'message', helpText)}\n      InputProps={{\n        ...InputProps,\n        startAdornment: renderStartAdornment,\n        endAdornment: renderEndAdornment\n      }}\n    />\n  )\n}\n\nexport default React.memo(SharedTextField)\n","export * from './app-bar'\nexport * from './form'\nexport * from './form/buildInput'\nexport * from './form/numberFormat'\nexport * from './loading'\nexport * from './link'\nexport * from './notFound'\nexport * from './snackBar'\nexport * from './tabs'\nexport * from './autocomplete'\nexport * from './accordion'\nexport * from './table'\nexport * from './itemName'\nexport * from './amount'\n","import React from 'react'\n\nimport Avatar from '@mui/material/Avatar'\n\nexport interface ItemNameProps {\n  image?: string\n  name: string\n}\nconst ItemNameContainer: React.FC<ItemNameProps> = ({ image, name = '' }) => {\n  return (\n    <Avatar src={image} alt={name} variant='square'>\n      {name.slice(0, 1).toUpperCase()}\n    </Avatar>\n  )\n}\n\nexport const ItemName = React.memo(ItemNameContainer)\n","// Libraries\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\n// Material Components\nimport MaterialLink, { LinkProps } from '@mui/material/Link'\n\nconst LinkContainer: React.FC<LinkProps & { to: string }> = ({ to, ...props }) => {\n  return <MaterialLink component={RouterLink} to={to} {...props} />\n}\n\nexport const Link = React.memo(LinkContainer)\n","// Libraries\nimport React from 'react'\n\n// Material Components\nimport Box from '@mui/material/Box'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Backdrop from '@mui/material/Backdrop'\n\n// Styles\nimport { sxLoadingBackdrop } from './styles'\n\n// Interfaces\nexport interface iLoading {\n  backdrop?: boolean\n}\n\nconst LoadingComponent: React.FC<iLoading> = ({ backdrop = false }) => {\n  if (backdrop) {\n    return (\n      <Backdrop sx={sxLoadingBackdrop} open>\n        <CircularProgress color='inherit' />\n      </Backdrop>\n    )\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <CircularProgress color='primary' />\n    </Box>\n  )\n}\n\nexport const Loading = React.memo(LoadingComponent)\n","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Paper from '@mui/material/Paper'\n\nconst NotFoundComponent: React.FC = () => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Paper>\n          <Box p={5}>\n            <h1 className='display-3'>404!</h1>\n            <p className='lead'>Page not found</p>\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport const NotFound = React.memo(NotFoundComponent)\n","// Libraries\nimport React, { useCallback, useMemo } from 'react'\n\n// Material Components\nimport Button from '@mui/material/Button'\nimport Snackbar from '@mui/material/Snackbar'\nimport Alert from '@mui/material/Alert'\n\n// Context\nimport { useAppContext } from '../hoc'\n\n// Interfaces\n\nexport type TypeSeverity = 'error' | 'info' | 'success' | 'warning'\nexport type TypeSnackBar = string | { message: string, severity: TypeSeverity } | undefined\n\nconst SnackBarComponent: React.FC = () => {\n  const { snackBarMessage, setSnackBarMessage } = useAppContext()\n\n  const handleClose = useCallback(\n    () => {\n      setSnackBarMessage(undefined)\n    },\n    [setSnackBarMessage]\n  )\n\n  const renderAction = useMemo(() => (\n    <Button\n      color='primary'\n      size='small'\n      onClick={handleClose}\n    >\n      OK\n    </Button>\n  ), [handleClose])\n\n  const renderMessage = useMemo(() => {\n    if (snackBarMessage === undefined) return undefined\n\n    const alertMessage = typeof snackBarMessage === 'object' ? snackBarMessage.message : snackBarMessage\n    const alertSeverity = typeof snackBarMessage === 'object' ? snackBarMessage.severity : 'success'\n\n    return (\n      <Alert\n        elevation={6}\n        variant='filled'\n        severity={alertSeverity}\n        onClose={handleClose}\n      >\n        {alertMessage}\n\n      </Alert>\n    )\n  }, [snackBarMessage, handleClose])\n\n  return (\n    <Snackbar\n      action={renderAction}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={3000}\n      onClose={handleClose}\n      open={Boolean(snackBarMessage)}\n    >\n      {renderMessage}\n    </Snackbar>\n  )\n}\n\nexport const SnackBar = React.memo(SnackBarComponent)\n","export const sxLoadingBackdrop = {\n  zIndex: 1,\n  color: '#fff'\n}\n","import React, { useMemo } from 'react'\nimport map from 'lodash/map'\n\n// Material Components\nimport Table, { TableProps } from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\n\nexport interface AppTableProps extends TableProps {\n  headItems: string[]\n  bodyItems: string[][]\n  size?: 'medium' | 'small'\n  className?: string\n}\n\nconst AppTableComponent: React.FC<AppTableProps> = ({\n  headItems,\n  bodyItems,\n  size = 'small',\n  className,\n  ...props\n}) => {\n  const renderTableHead = useMemo(() => {\n    const rows = map(headItems, (name, idx) => {\n      const key = `tableCell-${name}-${idx}`\n      return (\n        <TableCell\n          key={key}\n          align={idx > 0 ? 'right' : 'left'}\n        >\n          {name}\n        </TableCell>\n      )\n    })\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows}\n        </TableRow>\n      </TableHead>\n    )\n  }, [headItems])\n\n  const renderTableBody = useMemo(() => (\n    <TableBody>\n      {bodyItems.map((row, keyRow) => {\n        return (\n          <TableRow key={`tableBody-row-${keyRow}`}>\n            {row.map((item, keyItem) => (\n              <TableCell\n                key={`tableBody-row-${keyRow}-item-${keyItem}`}\n                component={keyItem === 0 ? 'th' : undefined}\n                scope={keyItem === 0 ? 'row' : undefined}\n                align={keyItem > 0 ? 'right' : 'left'}\n              >\n                {item}\n              </TableCell>\n            )\n            )}\n          </TableRow>\n        )\n      })}\n    </TableBody>\n  ), [bodyItems])\n\n  return (\n    <TableContainer className={className} component={Paper}>\n      <Table\n        {...props}\n        aria-label='simple table'\n        size={size}\n      >\n        {renderTableHead}\n\n        {renderTableBody}\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport const AppTable = React.memo(AppTableComponent)\n","import React, { ReactElement, useCallback, useMemo, useState } from 'react'\nimport map from 'lodash/map'\n\n// Material Components\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nconst a11yProps = (index: string): {id: string, 'aria-controls': string} => ({\n  id: `simple-tab-${index}`,\n  'aria-controls': `simple-tabpanel-${index}`\n})\n\n// Interfaces\ninterface TabPanelProps {\n  children: any\n  index: number\n  value: number\n}\n\ninterface AppTabsProps {\n  value?: number\n  tabsHeader: Array<number | string>\n  tabsBody: ReactElement[] | string[]\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nconst AppTabsContainer: React.FC<AppTabsProps> = ({ value = 0, tabsHeader, tabsBody }) => {\n  const [tabValue, setTabValue] = useState(value)\n\n  const handleChange = useCallback((event: React.SyntheticEvent, newValue: string) => setTabValue(parseInt(newValue, 10)), [])\n\n  const renderTabs = useMemo(() => {\n    return map(tabsHeader, item => (\n      <Tab\n        key={`tab-${item}`}\n        {...a11yProps(item.toString())}\n        label={item}\n      />\n    ))\n  }, [tabsHeader])\n\n  const renderTabPanels = useMemo(() => {\n    return map(tabsBody, (item, index) => (\n      <TabPanel key={index} index={parseInt(index, 10)} value={tabValue}>\n        {item}\n      </TabPanel>\n    ))\n  }, [tabsBody, tabValue])\n\n  return (\n    <>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleChange}\n          variant='scrollable'\n          scrollButtons='auto'\n\n        >\n          {renderTabs}\n        </Tabs>\n      </Box>\n      {renderTabPanels}\n    </>\n  )\n}\n\nexport const AppTabs = React.memo(AppTabsContainer)\n","import React, { ReactNode, useState, useContext, ReactElement } from 'react'\nimport { QueryClientProvider, QueryClient } from 'react-query'\n// import { ReactQueryDevtools } from 'react-query/devtools'\n// SnackBar\nimport { SnackBar, TypeSnackBar } from '../components'\n// import { AxiosResponse } from 'axios'\n\n// Types\n// export type TypeStatus = AxiosResponse<{ type:string, [key:string]: any }> | undefined\nexport type TypeStatus = any\n\ninterface AppContextProps {\n  status: TypeStatus\n  setStatus: React.Dispatch<React.SetStateAction<TypeStatus>>\n  snackBarMessage: TypeSnackBar\n  setSnackBarMessage: (arg: TypeSnackBar) => void\n  pageTitle: string\n  setPageTitle: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      staleTime: 1000 * 60,\n      cacheTime: 1000 * 60\n    }\n  }\n})\n\nconst AppContext = React.createContext<AppContextProps | undefined>(undefined)\n\nconst AppProviderComponent: React.FC<{ children?: ReactNode }> = ({ children }): ReactElement => {\n  const [status, setStatus] = useState<TypeStatus>()\n  const [snackBarMessage, setSnackBarMessage] = useState<TypeSnackBar>()\n  const [pageTitle, setPageTitle] = useState('')\n\n  const value: AppContextProps = {\n    status,\n    setStatus,\n    snackBarMessage,\n    setSnackBarMessage,\n    pageTitle,\n    setPageTitle\n  }\n\n  return (\n    <AppContext.Provider value={value}>\n      <QueryClientProvider client={queryClient}>\n        {children}\n        <SnackBar />\n        {/* <ReactQueryDevtools /> */}\n\n      </QueryClientProvider>\n    </AppContext.Provider>\n  )\n}\n\nexport const useAppContext = (): AppContextProps => {\n  const context = useContext(AppContext)\n\n  if (context === undefined) {\n    throw new Error('AppContext must be within AppProvider')\n  }\n\n  return context\n}\n\nexport const AppProvider = React.memo(AppProviderComponent)\n","import React, { useState } from 'react'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\n\n// Material Components\nimport Box from '@mui/material/Box'\n\nimport { NotFound } from '../components'\nimport AppBar from '../components/app-bar'\nimport { getLocalStorageValue } from '../utils'\n\ninterface RouteProp {\n  path: string\n  Element: any\n}\ninterface AppRoutesProps {\n  UserEntity: any\n  MainAppProvider: any\n  mainAppHook: any\n  routes: RouteProp[]\n  /** routes excluded for check if user is logged */\n  excluded?: string[]\n}\n\nconst logged = Boolean(getLocalStorageValue('token'))\n\nconst AppRoutesContainer: React.FC<AppRoutesProps> = ({ UserEntity, routes, MainAppProvider, mainAppHook }) => {\n  const [authRoutes] = useState(() => {\n    const routesMap = routes.map(({ Element, ...route }) => {\n      return <Route key={route.path} {...route} element={<Element />} />\n    })\n\n    return routesMap\n  })\n\n  return (\n    <HashRouter>\n      <MainAppProvider>\n        {Boolean(logged) && <AppBar mainAppHook={mainAppHook} />}\n        <Box sx={{ mt: logged ? 8 : 0 }}>\n          <Routes>\n            {logged && authRoutes}\n            <Route\n              path='/user/*'\n              element={<UserEntity />}\n            />\n            <Route path='*' element={<NotFound />} />\n          </Routes>\n        </Box>\n      </MainAppProvider>\n    </HashRouter>\n  )\n}\n\nexport const AppRoutes = React.memo(AppRoutesContainer)\n","// Libraries\nimport React, { useCallback, useMemo, useState, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport map from 'lodash/map'\n// Import isEmpty from 'lodash/isEmpty'\n\n// Material components\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport List from '@mui/material/List'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\nimport ListItemText from '@mui/material/ListItemText'\nimport IconButton from '@mui/material/IconButton'\n\n// Icons\nimport CloseIcon from '@mui/icons-material/Close'\n\n// Intl\nimport { Intl } from '../../utils'\n\n// Styles\nimport { sxCloseDialogButton } from './sx'\n\n// Interface\nimport { SelectedItemProps, DialogOptionsProps, DialogOptionProps } from './index'\n\n// #region\ninterface DefaultDialogProps {\n  title: string\n  onClose: () => void\n  options: DialogOptionsProps\n  selectedItem: SelectedItemProps\n  dialogFullScreen: boolean\n}\n\n// type ActionToConfirmProps = ((selectedItem: any) => void) | undefined\n\ntype HandleClickProps = (options: DialogOptionProps, key: string) => () => void\n\n// #endregion\n\nconst DefaultDialogComponent: React.FC<DefaultDialogProps> = ({ options, title, onClose, selectedItem, dialogFullScreen }) => {\n  const navigate = useNavigate()\n  const [showRender, setShowRender] = useState('renderOptionList')\n  const [selectedOption, setSelectedOption] = useState('')\n  const actionToConfirm = useRef<any>()\n\n  const handleClick = useCallback<HandleClickProps>(({ to, onConfirm, Component }, key) => () => {\n    setSelectedOption(key)\n\n    if (typeof to === 'string' && to !== '') {\n      navigate(`${to}/${selectedItem.id}`)\n    } else if (typeof to === 'function') {\n      to(selectedItem)\n    }\n\n    if (Component !== undefined) {\n      setShowRender('renderItemComponent')\n    }\n\n    if (onConfirm !== undefined) {\n      actionToConfirm.current = onConfirm\n      setShowRender('renderConfirmBox')\n    }\n  }, [navigate, selectedItem.id])\n\n  const handleConfirmClick = useCallback(async () => {\n    if (typeof actionToConfirm.current === 'function') {\n      await actionToConfirm.current(selectedItem)\n    }\n    onClose()\n  }, [selectedItem, onClose])\n\n  const renderOptionsList = useMemo(() => {\n    return (\n      <List>\n        {map(options, (option, key) => {\n          const shouldRender = typeof option.shouldRender === 'function' ? option.shouldRender(selectedItem) : true\n          const disabled = typeof option.disabled === 'function' ? option.disabled(selectedItem) : option.disabled\n\n          if (!shouldRender) return null\n\n          return (\n            <ListItemButton key={key} divider onClick={handleClick(option, key)} disabled={disabled}>\n              <ListItemAvatar>{option.icon}</ListItemAvatar>\n              <ListItemText primary={option.text} />\n            </ListItemButton>\n          )\n        }\n        )}\n      </List>\n    )\n  }, [options, handleClick])\n\n  const renderConfirmBox = useMemo(() => {\n    return (\n      <Box sx={{ p: 2 }}>\n        <Box sx={{ mb: 5 }}>\n          <Intl langKey='GENERAL.CONFIRM_ACTION' variant='h6' color='secondary' />\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Button\n            variant='contained'\n            color='secondary'\n            size='large'\n            onClick={() => setShowRender('renderOptionList')}\n          >\n            <Intl langKey='GENERAL.BACK' />\n          </Button>\n\n          <Button\n            variant='contained'\n            color='primary'\n            size='large'\n            onClick={handleConfirmClick}\n          >\n            <Intl langKey='GENERAL.CONFIRM' />\n          </Button>\n        </Box>\n      </Box>\n    )\n  }, [handleConfirmClick])\n\n  const renderItemComponent = React.useMemo(() => {\n    if (selectedOption === '') return null\n\n    const { Component } = options[selectedOption]\n\n    if (Component === undefined) return undefined\n\n    return <Component item={selectedItem} onClose={onClose} />\n  }, [options, selectedItem, selectedOption, onClose])\n\n  const renderContent = useMemo(() => {\n    switch (showRender) {\n      case 'renderConfirmBox':\n        return renderConfirmBox\n      case 'renderItemComponent':\n        return renderItemComponent\n      default:\n        return renderOptionsList\n    }\n  }, [showRender, renderConfirmBox, renderItemComponent, renderOptionsList])\n\n  return (\n    <Dialog\n      aria-labelledby='product-dialog'\n      fullWidth\n      fullScreen={dialogFullScreen}\n      onClose={onClose}\n      open\n    >\n      <DialogTitle id='default-dialog-title'>\n        {title}\n        <IconButton sx={sxCloseDialogButton} aria-label='close' onClick={onClose}>\n          <CloseIcon fontSize='small' />\n        </IconButton>\n      </DialogTitle>\n\n      <DialogContent dividers>\n        {renderContent}\n      </DialogContent>\n    </Dialog>\n\n  )\n}\n\nexport default React.memo(DefaultDialogComponent)\n","// Libraries\nimport React, {\n  // Dispatch,\n  NamedExoticComponent,\n  ReactElement,\n  // SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react'\n\nimport { Link } from 'react-router-dom'\n// import {UseQueryOptions} from \"react-query\";\nimport map from 'lodash/map'\n\n// Material Components\nimport Paper from '@mui/material/Paper'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport List from '@mui/material/List'\n\n// Icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// Shared\nimport { onlyText } from '../../utils'\nimport { Loading, AppTabs } from '../../components'\nimport { useAppContext } from '../appContext'\n\n// Components\nimport DefaultDialog from './defaultDialog'\n\n// Interfaces\n/**\n * Object of options for show in dialog when a item is selected.\n *\n * each option must be an object with the following key/value\n * ```\n * {\n *   [name]: {\n *     icon: [MaterialIcon](<AddIcon />),\n *     text: [Text for list item](<Intl langKey=\"INCOME.LABEL.EDIT\" />),\n *     to: [Route for click](routes.income.edit),\n *   }\n *    * }```\n * if there is **to** key, to this route will be added a *selectedItem.id* value.\n *\n * [name] can be used for custom actions:\n * ```\n * const dialogOptions = {\n *   delete: {\n *     icon: <DeleteIcon color=\"secondary\" />,\n *     text: <Intl langKey=\"INCOME.LABEL.DELETE\" color=\"secondary\" />,\n *   }\n * };\n *\n * const Component = () => {\n *   //---...\n *   dialogOptions.delete.onConfirm = async ({ id }) => {\n *     await deleteIncome({ variables: { id } });\n *   };\n *   // ...\n * };\n * ```\n */\n\nexport interface DialogOptionProps {\n  icon: ReactElement\n  text: ReactElement\n  to?: string | ((selectedItem: SelectedItemProps) => void)\n  onConfirm?: (selectedItem: SelectedItemProps) => void\n  // Component?: (props: { item: SelectedItemProps, onClose: () => void }) => ReactElement\n  Component?: React.ComponentType<{ item: SelectedItemProps, onClose: () => void }>\n  disabled?: boolean | ((selectedItem: SelectedItemProps) => boolean)\n  shouldRender?: (selectedItem: SelectedItemProps) => boolean\n  // Component: ItemComponentProps\n}\n\nexport interface DialogOptionsProps {\n  [key: string]: DialogOptionProps\n}\n\n/**\n * Used for split content in tabs\n * tabsHeader: label for show in tabhead\n * filterTabs: array of fns for filter content in each tab. Each tab will\n * use the defined component\n */\ninterface TabsProps {\n  tabsHeader: string[]\n  filterTabs: Array<(data: any) => SelectedItemProps[]>\n}\n\ntype ItemComponentProps =\n  NamedExoticComponent<any>\n  | ((props: { item: SelectedItemProps, onSelect: () => void, [key: string]: any, onClose: () => void }) => ReactElement)\n\nexport interface SelectedItemProps {\n  id: string | number\n  name: string\n\n  [key: string]: any\n}\n\nexport interface BuildPageListProps {\n  // useQuery: (options?: UseQueryOptions) => UseQueryResult\n  useQuery: any\n  /** add params to request */\n  useQueryParams?: {\n    params: {\n      [key: string]: string | number | boolean\n    }\n  }\n  /** URL for ADD page */\n  addRoute?: string\n  /** translation string */\n  addText?: string\n  /** translation string */\n  pageTitle: string\n  dialogOptions?: DialogOptionsProps\n  dialogFullScreen?: boolean\n  DialogComponent?: (props: { onClose: () => void, selectedItem: SelectedItemProps, title: string, dialogFullScreen: boolean }) => ReactElement\n  loading?: boolean\n  ItemComponent: ItemComponentProps\n  itemComponentProps?: any\n  tabs?: TabsProps\n  SearchComponent?: any\n}\n\n/** Component for Create Lists with commons functionalities */\nconst BuildPageListComponent: React.FC<BuildPageListProps> = ({\n  useQuery,\n  useQueryParams,\n  addRoute,\n  pageTitle,\n  addText,\n  dialogOptions,\n  dialogFullScreen = false,\n  DialogComponent,\n  loading,\n  ItemComponent,\n  itemComponentProps,\n  tabs,\n  SearchComponent\n}) => {\n  const { setPageTitle, setSnackBarMessage } = useAppContext()\n\n  const [searchParams, setSearchParams] = useState()\n\n  const [selectedItem, setSelectedItem] = useState<SelectedItemProps | undefined>(undefined)\n\n  const queryParams = useMemo(() => {\n    if (searchParams !== undefined) return useQueryParams\n\n    return { params: searchParams }\n  }, [useQueryParams, searchParams])\n\n  const { loading: isLoading, data: queryData, error } = useQuery(queryParams)\n\n  const handleSelectItem = useCallback((selectedItem: any) => () => {\n    if ((dialogOptions != null) || (DialogComponent != null)) {\n      setSelectedItem(selectedItem)\n    }\n  }, [dialogOptions, DialogComponent])\n\n  const handleOnClose = useCallback(() => setSelectedItem(undefined), [])\n\n  const renderButton = useMemo(() => {\n    if (addRoute === undefined) return null\n\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1, p: 1, pt: 2, pb: 2 }}>\n        <Button\n          color='primary'\n          component={Link}\n          to={addRoute}\n          variant='contained'\n        >\n          <AddIcon />\n          {onlyText(addText ?? 'GENERAL.ADD')}\n        </Button>\n      </Box>\n    )\n  }, [addRoute, addText])\n\n  const renderDialog = useMemo(() => {\n    if ((selectedItem == null) || (dialogOptions == null)) return null\n\n    if (DialogComponent != null) {\n      return (\n        <DialogComponent\n          dialogFullScreen={dialogFullScreen}\n          onClose={handleOnClose}\n          selectedItem={selectedItem}\n          title={selectedItem.name ?? onlyText('FORM.LABEL.OPTIONS')}\n        />\n      )\n    }\n\n    if (dialogOptions !== undefined) {\n      return (\n        <DefaultDialog\n          dialogFullScreen={dialogFullScreen}\n          onClose={handleOnClose}\n          options={dialogOptions}\n          selectedItem={selectedItem}\n          title={selectedItem.name ?? onlyText('FORM.LABEL.OPTIONS')}\n        />\n      )\n    }\n  },\n  [\n    selectedItem,\n    dialogOptions,\n    dialogFullScreen,\n    handleOnClose,\n    DialogComponent\n  ]\n  )\n\n  const renderList = useMemo(() => {\n    if (queryData === undefined) return null\n\n    const { data } = queryData\n\n    if (tabs != null) {\n      const tabsBody = tabs.filterTabs.map((fn, idxTab) => {\n        const filteredData = fn(data)\n        return (\n          <List key={`list-tab-${idxTab}`}>\n            {map(filteredData, (item, idx) => (\n              <ItemComponent\n                {...itemComponentProps}\n                key={idx}\n                item={item}\n                onSelect={handleSelectItem}\n              />\n            ))}\n          </List>\n        )\n      })\n\n      return (\n        <AppTabs\n          tabsBody={tabsBody}\n          tabsHeader={tabs.tabsHeader}\n        />\n      )\n    }\n\n    return (\n      <List>\n        {map(data, (item, idx) => (\n          <ItemComponent\n            {...itemComponentProps}\n            key={idx}\n            item={item}\n            onSelect={handleSelectItem}\n          />\n        ))}\n      </List>\n    )\n  },\n  [\n    queryData,\n    ItemComponent,\n    itemComponentProps,\n    handleSelectItem,\n    tabs\n  ]\n  )\n\n  const renderLoading = useMemo(() => {\n    if (loading === true || isLoading === true) return <Loading backdrop />\n  }, [loading, isLoading])\n\n  const renderSearch = useMemo(() => {\n    if (SearchComponent === undefined) return null\n\n    return (\n      <SearchComponent onSearch={setSearchParams} />\n    )\n  }, [SearchComponent])\n\n  useEffect(() => {\n    setPageTitle(onlyText(pageTitle))\n  }, [setPageTitle, pageTitle])\n\n  useEffect(() => {\n    if (error instanceof Error) {\n      setSnackBarMessage({ message: onlyText('GENERAL.ERROR'), severity: 'error' })\n    }\n  }, [error, setSnackBarMessage])\n\n  return (\n    <Paper>\n      {renderDialog}\n      {renderButton}\n      <Box>\n        {renderSearch}\n        {renderList}\n      </Box>\n      {renderLoading}\n    </Paper>\n  )\n}\n\nexport const BuildPageList = React.memo(BuildPageListComponent)\n","import { SxProps } from '@mui/system'\n\nexport const sxCloseDialogButton: SxProps = {\n  position: 'absolute',\n  right: 8,\n  top: 8,\n  color: (theme: any) => theme.palette.grey[500]\n}\n","import React, { ComponentType, useMemo } from 'react'\nimport { Routes, Route, Outlet } from 'react-router-dom'\n\nexport interface BuildEntityPageProps {\n  routes: Array<{\n    index?: boolean\n    path?: string\n    Component: ComponentType\n  }>\n}\n\nconst BuildEntityPageComponent: React.FC<BuildEntityPageProps> = ({ routes }) => {\n  const routesMemoized = useMemo(() => {\n    return routes.map(({ index = false, path, Component }) => (\n      <Route key={path} index={index} path={path} element={<Component />} />\n    ))\n  }, [routes]\n  )\n\n  return (\n    <>\n      <Routes>\n        {routesMemoized}\n      </Routes>\n      <Outlet />\n    </>\n  )\n}\n\nexport const BuildEntityPage = React.memo(BuildEntityPageComponent)\n","import React, { useCallback, useEffect, useMemo, useRef } from 'react'\n\nimport {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseQueryOptions,\n  UseQueryResult\n} from 'react-query'\n\nimport { useParams } from 'react-router-dom'\nimport isEmpty from 'lodash/isEmpty'\nimport each from 'lodash/each'\n\n// Material Components\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\n\n// Context\nimport { useAppContext } from './appContext'\n\n// Shared\nimport { CreateForm, BuildFormProps, Loading, InputsFormConfigProps } from '../components'\nimport { HookResultProps, onlyText } from '../utils'\n\n// #region\n// Interfaces\ninterface AnyParams { [key: string]: any }\nexport type UseMutateActionProps = (id: number | string, useMutateOptions: UseMutationOptions) => HookResultProps\nexport type BeforeMutateActionProps = (formData: { [key: string]: any }, mutate: UseMutateFunction<unknown, unknown, unknown>) => void\nexport type UseQueryActionProps = (params: { id: number | string, params: AnyParams | undefined }, options: UseQueryOptions & { idRequired: boolean }) => UseQueryResult\nexport type AfterMutateActionProps = (id: number | string | null, mutateData: any, error: any) => void\n\nexport interface ActionsProps {\n  /**\n   * Hook for get all the form data before send request\n   *\n   * @param {BuildFormProps} formData - Data build by form inputs\n   * @param {(formData:{[key]: any})=>void} mutate - function for make request\n   */\n  beforeMutate?: BeforeMutateActionProps\n  useMutate: UseMutateActionProps\n  useMutateOptions?: any\n  afterMutate: AfterMutateActionProps\n  useQuery?: UseQueryActionProps\n  useQueryParams?: AnyParams\n  useQueryOptions?: UseQueryOptions\n  afterQuery?: (formData: AnyParams, data: AnyParams) => void\n}\n\nexport interface BuildPageFormProps {\n  entity?: string\n  pageTitle?: string\n  buildFormProps: BuildFormProps\n  actions: ActionsProps\n}\n// #endregion\n\nconst BuildPageFormContainer: React.FC<BuildPageFormProps> = ({\n  entity,\n  pageTitle = '',\n  buildFormProps: {\n    defaultSuccessMessage = true,\n    noBackButton = false,\n    disabled = false,\n    confirmButtonLangkey,\n    inputsFormConfig\n  },\n  actions: {\n    beforeMutate,\n    useMutate,\n    useMutateOptions = {},\n    afterMutate,\n    useQuery = () => ({}),\n    useQueryParams,\n    useQueryOptions = {},\n    afterQuery\n  }\n}) => {\n  const { setPageTitle, setSnackBarMessage } = useAppContext()\n  const { id = '' } = useParams()\n\n  const afterQueryCalled = useRef(false)\n  const dataSet = useRef(false)\n\n  const { mutate, isSuccess, error, isLoading: adding, data: mutateData }: any = useMutate(id, useMutateOptions)\n\n  const { isLoading = false, data: queryData = {} }: any = useQuery({ id, params: useQueryParams }, {\n    enabled: Boolean(id),\n    idRequired: true,\n    ...useQueryOptions\n  })\n\n  const handleSubmit = useCallback((formData: {[k: string]: any}) => {\n    if (id !== '') {\n      formData.id = id\n    }\n\n    if (beforeMutate != null) {\n      beforeMutate(formData, mutate)\n    } else {\n      mutate(formData)\n    }\n  }, [beforeMutate, mutate, id])\n\n  const errors = useMemo(() => {\n    if (mutateData?.status === 'error') {\n      return mutateData?.errors\n    }\n\n    return {}\n  }, [mutateData])\n\n  /** set data for form */\n  const formData = useMemo<InputsFormConfigProps>(() => {\n    const { data = {} } = queryData\n\n    if (isEmpty(data)) return inputsFormConfig\n\n    if (!dataSet.current) {\n      each(inputsFormConfig, fieldProps => {\n        if (data[fieldProps.name] !== undefined) {\n          fieldProps.value = data[fieldProps.name]\n          fieldProps.disabled = false\n        }\n      })\n    }\n    dataSet.current = true\n\n    if ((afterQuery != null) && !afterQueryCalled.current) {\n      afterQuery(inputsFormConfig, data)\n    }\n\n    afterQueryCalled.current = true\n\n    return inputsFormConfig\n  }, [queryData, inputsFormConfig, afterQuery])\n\n  const confirmButtonText = useMemo(() => {\n    if (confirmButtonLangkey !== undefined) return confirmButtonLangkey\n    if (id !== '') return 'GENERAL.EDIT'\n    return 'GENERAL.ADD'\n  }, [confirmButtonLangkey, id])\n\n  /** set title */\n  useEffect(() => {\n    if (pageTitle !== '') {\n      setPageTitle(onlyText(pageTitle))\n    } else if (entity !== undefined) {\n      const title = `${entity.toLocaleUpperCase()}.${id !== '' ? 'EDIT' : 'ADD'}.TITLE`\n      setPageTitle(onlyText(title))\n    }\n  }, [id, setPageTitle, entity, pageTitle])\n\n  /** when a mutation is made */\n  useEffect(() => {\n    if (isSuccess === true && mutateData?.status === 'success') {\n      if (defaultSuccessMessage) {\n        setSnackBarMessage(onlyText('GENERAL.ADD_SUCCESS'))\n      }\n\n      if (error !== null && mutateData?.data !== undefined) {\n        throw new Error('something is wrong with response format')\n      }\n\n      afterMutate(id, mutateData?.data, error)\n    }\n\n    if (error instanceof Error) {\n      setSnackBarMessage({ message: onlyText('GENERAL.ERROR'), severity: 'error' })\n    }\n  },\n  [isSuccess, error, mutateData, id, afterMutate, setSnackBarMessage, defaultSuccessMessage]\n  )\n\n  if (id !== '' && (isLoading === true || isEmpty(queryData))) {\n    return <Loading backdrop />\n  }\n\n  return (\n    <Paper>\n      <Box sx={{ mt: 2, p: 2 }}>\n        <CreateForm\n          loading={adding}\n          disabled={disabled}\n          noBackButton={noBackButton}\n          confirmButtonLangkey={confirmButtonText}\n          inputsFormConfig={formData}\n          responseErrors={errors}\n          onSubmit={handleSubmit}\n        />\n      </Box>\n    </Paper>\n  )\n}\n\nexport const BuildPageForm = React.memo(BuildPageFormContainer)\n","export * from './appContext'\nexport * from './appRoutes'\nexport * from './buildEntityPage'\nexport * from './buildPageForm'\nexport * from './build-page-list'\n","export * from './components'\nexport * from './hoc'\nexport * from './utils'\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport set from 'lodash/set'\n\nimport { getLocalStorageValue } from './localStorage'\n\nconst token = getLocalStorageValue('token')\n\nexport let api: AxiosInstance\n\n/** Axios configuration for make request to api via `react-query` */\nexport const initApi = (config: AxiosRequestConfig): void => {\n  api = axios.create(config)\n\n  api.interceptors.request.use(config => {\n    set(config, 'headers.Authorization', `Bearer ${token}`)\n    return config\n  })\n\n  api.interceptors.response.use(\n    ({ data }) => data,\n    (error) => {\n      if (error.message === 'Network Error' || error?.response?.status === 500) {\n        throw new Error('general-error')\n      }\n      if (error?.response?.status === 404) {\n        throw new Error('not-found')\n      }\n      if (error?.response?.status === 401) {\n        throw new Error('forbidden')\n      }\n    }\n  )\n}\n","/* eslint-disable react-hooks/rules-of-hooks,@typescript-eslint/no-empty-function */\nimport {\n  QueryClient,\n  useMutation,\n  UseMutationResult,\n  useQuery as useReactQuery,\n  useQueryClient,\n  // UseQueryOptions,\n  UseQueryResult\n} from 'react-query'\n\nimport upperFirst from 'lodash/upperFirst'\nimport isEmpty from 'lodash/isEmpty'\nimport capitalize from 'lodash/capitalize'\n\nimport { AxiosResponse } from 'axios'\n\n// Api\nimport { api } from './api'\n\n// Interfaces\nexport type HookResultProps = UseMutationResult<AxiosResponse, unknown, iParams | undefined> |\nUseMutationResult<AxiosResponse, unknown, iParams> |\nUseQueryResult<AxiosResponse> | (() => void)\n\nexport interface iParams {\n  id?: string\n  [key: string]: any\n}\n\ninterface ObjectStringProps {\n  [key: string]: any\n}\n\nexport interface HooksProps {\n  [key: string]: any\n}\n\ninterface AdditionalEndpointsProps {\n  name: string\n  endpoint: string\n  type: 'GET' | 'POST'\n}\n\ninterface UseMutateOptionsProps {\n  refetchQueries?: string[]\n}\n\ninterface QueryParamsProps {\n  id?: string\n  params?: HooksProps\n}\n\ninterface QueryOptionsProps {\n  idRequired?: boolean\n  paramsRequired?: boolean\n  [key: string]: any\n}\n\ntype UseQueryProps = (queryParams: QueryParamsProps, options: QueryOptionsProps) => any\n\ntype UseMutateProps = (id: string | null, options: UseMutateOptionsProps) => any\n\ntype UseDeleteProps = (options: UseMutateOptionsProps) => any\n\ntype UseSetAdditionalEndpointsProps = (arg: {hooks: HooksProps, additionalEndpoints?: AdditionalEndpointsProps[]}) => void\n\ntype UseCreateApiProps = (endpoint: string, additionalEndpoints?: AdditionalEndpointsProps[]) => HooksProps\n\ntype UseCustomQueryProps = (name: string, endpoint: string) => (queryParams: {id?: string, params?: ObjectStringProps}, options: ObjectStringProps) => any\n\ntype UseCustomMutateProps = (endpoint: string) => (id: string | null, options: UseMutateOptionsProps) => any\n\ntype OnSuccessMutateProps = (client: QueryClient, queries: string[]) => () => Promise<any>\n\nconst onSuccessMutate: OnSuccessMutateProps = (client, queries) => async () => {\n  return await Promise.all(queries.map(async (query: any) => await client.refetchQueries(query)))\n}\n\nconst useCustomQuery: UseCustomQueryProps = (name, endpoint) => (queryParams = {}, options = {}) => {\n  const { id = null, params = {} } = queryParams\n\n  if (id !== null) {\n    return useReactQuery(name, async () => await api.get(`${endpoint}/${id}`), options)\n  }\n\n  return useReactQuery(name, async () => await api.get(endpoint, { params }), options)\n}\n\nconst useCustomMutation: UseCustomMutateProps = (endpoint) => (id: string | null, options = {}) => {\n  const { refetchQueries = [] } = options\n\n  const onSuccess = onSuccessMutate(useQueryClient(), [endpoint, ...refetchQueries])\n\n  return useMutation(async (params) => {\n    if (id !== null) return await api.put(`${endpoint}/${id}`, params)\n    return await api.post(endpoint, params)\n  }, { onSuccess, ...options })\n}\n\n/* If `additionalEndpoints` comes, must be an array of {name, endpoint, type} and will be added as ´use${upperFirst(name)}´ hook */\nconst useSetAdditionalEndpoints: UseSetAdditionalEndpointsProps = ({ hooks, additionalEndpoints = [] }) => {\n  additionalEndpoints.forEach(({ name, endpoint, type }) => {\n    if (type === 'GET') {\n      hooks[`use${upperFirst(name)}`] = useCustomQuery(name, endpoint)\n    } else {\n      hooks[`use${upperFirst(name)}`] = useCustomMutation(endpoint)\n    }\n  })\n}\n\n/**\n * every entity must have `config/context` file with the following basic code\n * ````\n * ...\n * import React, {ReactElement, ReactNode, useContext} from 'react'\n * const api = useCreateApi('sauce')\n * const SauceAppContext = React.createContext<HooksProps | undefined>(undefined)\n * const SauceAppProviderComponent: React.FC<{ children?: ReactNode }> = ({children}): ReactElement => {\n *   return (\n *     <SauceAppContext.Provider value={api}>\n *       {children}\n *     </SauceAppContext.Provider>\n *   )\n * }\n *\n * export const useSauceAppContext = (): HooksProps => {\n * const context = useContext(SauceAppContext)\n *\n * if (context === undefined) {\n *     throw new Error(\"AppContext must be within AppProvider -- in Sauce\")\n * }\n *\n *  return context\n * }\n *\n *  export const SauceAppProvider = React.memo(SauceAppProviderComponent)\n * ````\n * if `additionalEndpoints` comes, must be an array of {name, endpoint, type} and will be added as ´use${upperFirst(name)}´ hook\n *\n * @param {string} endpoint - endpoint url\n * @param {AdditionalEndpointsProps[]} additionalEndpoints - set of additional endpoints\n * @returns react-query hooks for insert in entity context\n */\nexport const useCreateApi: UseCreateApiProps = (endpoint, additionalEndpoints) => {\n  if (api === undefined) {\n    throw new Error('No Api configured')\n  }\n\n  const client = useQueryClient()\n\n  const entity = capitalize(endpoint)\n\n  const useMutate: UseMutateProps = async (id = null, options = {}) => {\n    const { refetchQueries = [] } = options\n    const onSuccess = onSuccessMutate(client, [endpoint, ...refetchQueries])\n\n    if (id !== null) return useMutation(async (params: iParams) => await api.put(`${endpoint}/${id}`, params), { ...options, onSuccess })\n\n    return useMutation(async (params: iParams) => await api.post(endpoint, params), { ...options, onSuccess })\n  }\n\n  const useDelete: UseDeleteProps = (options = {}) => {\n    const { refetchQueries = [] } = options\n    const onSuccess = onSuccessMutate(client, [endpoint, ...refetchQueries])\n\n    return useMutation(async ({ id, ...options }: iParams) => await api.delete(`${endpoint}/${id ?? ''}`, options), { onSuccess, ...options })\n  }\n\n  /**\n   * @typedef {Object} params - options needed for make requests params are exclusive, id or params. If need to search by id too, insert id on params\n   * @param {string | number | undefined} id - id of record\n   * @param {iParams} params - params for search\n   * @param {boolean} idRequired - if the request needs id as mandatory\n   * @param {boolean} paramsRequired - if the request needs id as mandatory\n   * @param {*} options :options of react-query useQuery\n   * @returns\n   */\n  const useQuery: UseQueryProps = (\n    { id = undefined, params = {} } = {},\n    { idRequired = false, paramsRequired = false, ...options } = {}\n  ) => {\n    if ((idRequired && id === undefined) || (paramsRequired && isEmpty(params))) {\n      return () => { }\n    }\n\n    if (id !== undefined) {\n      return useReactQuery([endpoint, id], async () => await api.get(`${endpoint}/${id}`, { params }), options)\n    }\n\n    return useReactQuery([endpoint, params], async () => await api.get(endpoint, { params }), options)\n  }\n\n  const hooks: HooksProps = {\n    [`use${entity}Delete`]: useDelete,\n    [`use${entity}Mutate`]: useMutate,\n    [`use${entity}Query`]: useQuery\n  }\n\n  if (additionalEndpoints != null) {\n    useSetAdditionalEndpoints({ hooks, additionalEndpoints })\n  }\n\n  return hooks\n}\n\n/** Create request hooks only with additionalEndpoints configuration */\nexport const createCustomApi = (additionalEndpoints: AdditionalEndpointsProps[]): HooksProps => {\n  if (api === undefined) {\n    throw new Error('No Api configured')\n  }\n\n  const hooks = {}\n\n  useSetAdditionalEndpoints({ hooks, additionalEndpoints })\n\n  return hooks\n}\n","import { useRef, useEffect, useMemo } from 'react'\n\nimport { onlyText } from '../utils/intl'\n\nexport const usePreviousValue = <T extends undefined>(value: T): T | undefined => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport const useLabel = (label: string | (() => string)): string => {\n  const renderLabel = useMemo(() => {\n    if (typeof label === 'string') return onlyText(label)\n    if (typeof label === 'function') return label()\n    return '-'\n  }, [label])\n\n  return renderLabel\n}\n","export * from './api'\nexport * from './endpoints'\nexport * from './intl'\nexport * from './localStorage'\nexport * from './utils'\nexport * from './hooks'\n","/** eslint-ignore  @typescript-eslint/no-unused-vars */\n// Libraries\nimport React from 'react'\nimport get from 'lodash/get'\nimport isObject from 'lodash/isObject'\nimport each from 'lodash/each'\nimport isEmpty from 'lodash/isEmpty'\n\n// Material Components\nimport Typography, { TypographyProps } from '@mui/material/Typography'\n\ninterface iReplace {\n  [key: string]: string\n}\n\ninterface LangTranslationsProps {\n  [key: string]: string | LangTranslationsProps\n}\n\nexport interface IntlProps extends TypographyProps {\n  langKey: string\n  replace?: iReplace\n  transpileHTML?: boolean\n  noCache?: boolean\n  children?: React.ReactNode\n  component?: string\n}\n\nconst replacedCached: iReplace = {}\n\nlet translations: LangTranslationsProps\n\nconst getKey = (key: string): string => {\n  if (isEmpty(translations)) return 'NO_LANGCODE_DEFINED'\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-expect-error\n  return get(translations, key, `##${key}##`)\n}\n\nconst replaceRegex = (key: string) => new RegExp(`\\\\$\\\\{${key}\\\\}`, \"g\") // eslint-disable-line\n\n/**\n * Function for set copies.\n * must provide the the copies(json) for this langcode:\n * {\n *  \"bla\": \"lorem ipsum....stuff\"\n * }\n * */\nexport const initLangCode = (newTranslations: LangTranslationsProps): void => {\n  translations = newTranslations\n}\n\ntype OnlyTextProps = (langKey: string, replace?: iReplace, noCache?: boolean) => string\n\n/**\n * Function for get copy from translation json file\n * @param {string} langKey - key in translation json file\n * @param {object} replace - object for insert values in translation\n * @param {boolean} noCache - update copy in every render\n * */\nexport const onlyText: OnlyTextProps = (langKey, replace = undefined, noCache = false) => {\n  let text = getKey(langKey)\n\n  if (replace == null) {\n    return text\n  }\n\n  if (!isObject(replace)) {\n    throw new Error(`Intl Error ->> Bad Replace structure in ---> ${langKey}`)\n  }\n\n  if (replacedCached[langKey] !== undefined) {\n    return replacedCached[langKey]\n  }\n\n  each(replace, (value: string, key: string) => {\n    const regex = replaceRegex(key.toString())\n\n    if (!regex.test(text)) {\n      throw new Error(`Intl Error ->> key -- ${key} -- not defined translation in ---> ${langKey}`)\n    }\n\n    text = text.replace(replaceRegex(key), value)\n  }\n  )\n\n  if (!noCache) {\n    replacedCached[langKey] = text\n  }\n\n  return text\n}\n\nconst IntlContainer: React.FC<IntlProps> = ({ langKey, replace, transpileHTML = false, noCache = false, ...props }) => {\n  if (transpileHTML) {\n    return (\n      <Typography\n        {...props}\n        data-langkey={langKey}\n        dangerouslySetInnerHTML={{ __html: onlyText(langKey, replace, noCache) }}\n      />\n    )\n  }\n\n  return (\n    <Typography {...props} data-langkey={langKey}>\n      {onlyText(langKey, replace, noCache)}\n    </Typography>\n  )\n}\n\nexport const Intl: React.NamedExoticComponent<IntlProps> = React.memo(IntlContainer)\n\nexport default Intl\n","type GetLocalStorageValueProps = (key: string) => string\ntype SetLocalStorageValueProps = (key: string, value: any) => void\ntype ClearLocalStorageValueProps = (key: string) => void\n\ninterface IStorage {\n  getItem: (key: string) => string | null\n  setItem: (key: string, value: string) => void\n  removeItem: (key: string) => void\n}\n\nconst storage: IStorage = window.localStorage\n\nexport const getLocalStorageValue: GetLocalStorageValueProps = (key) => {\n  const item = storage.getItem(`fs_${key}`)\n\n  if (item !== null) return JSON.parse(item)\n\n  return ''\n}\n\nexport const setLocalStorageValue: SetLocalStorageValueProps = (key, value) => {\n  storage.setItem(`fs_${key}`, JSON.stringify(value))\n}\n\nexport const clearLocalStorageValue: ClearLocalStorageValueProps = (key) => {\n  storage.removeItem(`fs_${key}`)\n}\n","type FormatToNumberProps = (n: string | number) => string\ntype FormatToMoneyProps = (value: string | number, spacing?: boolean) => string\ntype FormatToPhoneProps = (text: string) => string\n\nexport const formatToNumber: FormatToNumberProps = n => {\n  const fixed = Number(n) === n && n % 1 !== 0\n    ? 2\n    : 0\n  return Number(n)\n    .toFixed(fixed)\n    .replace(\n      /(\\d)(?=(\\d{3})+(?!\\d))/g,\n      '$1.'\n    )\n}\n\nexport const formatToMoney: FormatToMoneyProps = (value, spacing = true) => `$${spacing\n  ? ' '\n  : ''}${formatToNumber(value)}`\n\nexport const formatToPhone: FormatToPhoneProps = (text = '') => {\n  const t1 = text.slice(0, 3)\n  const t2 = text.slice(3, 6)\n  const t3 = text.slice(6)\n\n  return `${t1} ${t2} ${t3}`\n}\n"],"names":["root","factory","exports","module","define","amd","self","SharedAccordion","memo","items","name","children","props","itemIdx","key","expandIcon","id","sx","textTransform","SharedAmount","onPlus","onMinus","maxValue","amount","setAmount","useState","handlePlus","useCallback","value","handleMinus","my","alignItems","justifyContent","display","color","onClick","size","fontSize","px","width","label","onlyText","variant","disabled","mainAppHook","pageTitle","useAppContext","menuItems","isMenuOpen","setOpenMenu","handleClick","sxAppBar","position","Link","sxLinkHome","to","src","alt","flexGrow","className","edge","onCloseMenu","container","undefined","window","document","body","renderMenuItems","useMemo","subheader","sxSubHeader","Intl","langKey","paragraph","style","marginTop","map","icon","Icon","path","divider","Fragment","button","component","primary","mt","bgcolor","anchor","open","onClose","ModalProps","keepMounted","paddingTop","paddingBottom","backgroundColor","zIndex","minHeight","marginRight","defaultUseQuery","isLoading","data","refetch","Autocomplete","useQuery","options","startAdornment","inputProps","renderProps","onChange","fieldValue","useFormProps","field","fieldProps","fieldState","error","onChangeField","helpText","incomingValue","autocompleteValue","setAutocompleteValue","inputValue","setInputValue","inputOptions","setInputOptions","params","enabled","debounceSearch","useRef","renderLabel","useLabel","renderInput","InputProps","endAdornment","Boolean","helperText","handleChange","_evt","handleInputChange","length","current","useEffect","Object","is","disablePortal","filterOptions","x","onInputChange","loading","defaultInputProps","onBlur","ref","invalid","isTouched","isDirty","formState","dirtyFields","isSubmitted","isSubmitSuccessful","submitCount","touchedFields","isSubmitting","isValidating","isValid","errors","type","BuildInput","mb","previousValue","usePreviousValue","checked","setChecked","evt","target","renderHelpText","message","control","dateAdapter","inputFormat","CreateForm","noBackButton","backTo","confirmButtonLangkey","inputsFormConfig","responseErrors","onSubmit","navigate","useNavigate","validationSchema","fields","prev","yupValidation","object","shape","handleBackAction","handleSubmit","setError","useForm","resolver","yupResolver","renderBuildInput","buildForm","showInput","tooltip","parentBox","buildInputController","Controller","render","title","arrow","placement","backButton","mr","disableElevation","isButtonSubmitDisabled","autoComplete","pb","pt","NumberFormatCustom","forwardRef","getInputRef","onValueChange","thousandSeparator","decimalSeparator","isNumericString","displayName","SharedNumberFormatComponent","inputComponent","SharedNumberFormat","handleChangeInputValue","renderOptions","required","handleOnChange","renderValue","selected","item","find","fullWidth","toLowerCase","labelId","includes","flexWrap","gap","filter","multiple","defaultValue","sxTextField","paper","padding","textField","marginBottom","marginLeft","sxSelect","select","sxIcon","sxDatePicker","top","left","right","bottom","content","transition","borderBottom","pointerEvents","dateInputs","dateYear","paddingLeft","renderStartAdornment","renderEndAdornment","red","isEqual","margin","get","ItemName","image","slice","toUpperCase","Loading","backdrop","sxLoadingBackdrop","NotFound","xs","p","SnackBar","snackBarMessage","setSnackBarMessage","handleClose","renderAction","renderMessage","alertMessage","alertSeverity","severity","elevation","action","anchorOrigin","vertical","horizontal","autoHideDuration","AppTable","headItems","bodyItems","renderTableHead","rows","idx","align","renderTableBody","row","keyRow","keyItem","scope","TabPanel","index","other","role","hidden","AppTabs","tabsHeader","tabsBody","tabValue","setTabValue","event","newValue","parseInt","renderTabs","toString","renderTabPanels","borderColor","scrollButtons","queryClient","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","staleTime","cacheTime","AppContext","createContext","context","useContext","Error","AppProvider","status","setStatus","setPageTitle","Provider","QueryClientProvider","client","logged","getLocalStorageValue","AppRoutes","UserEntity","routes","MainAppProvider","authRoutes","Element","route","Route","element","HashRouter","Routes","selectedItem","dialogFullScreen","showRender","setShowRender","selectedOption","setSelectedOption","actionToConfirm","onConfirm","Component","handleConfirmClick","async","renderOptionsList","option","shouldRender","text","renderConfirmBox","renderItemComponent","renderContent","fullScreen","sxCloseDialogButton","dividers","BuildPageList","useQueryParams","addRoute","addText","dialogOptions","DialogComponent","ItemComponent","itemComponentProps","tabs","SearchComponent","searchParams","setSearchParams","setSelectedItem","queryParams","queryData","handleSelectItem","handleOnClose","renderButton","renderDialog","renderList","filterTabs","fn","idxTab","filteredData","onSelect","renderLoading","renderSearch","onSearch","theme","palette","grey","BuildEntityPage","routesMemoized","Outlet","BuildPageForm","entity","buildFormProps","defaultSuccessMessage","actions","beforeMutate","useMutate","useMutateOptions","afterMutate","useQueryOptions","afterQuery","useParams","afterQueryCalled","dataSet","mutate","isSuccess","adding","mutateData","idRequired","formData","confirmButtonText","toLocaleUpperCase","token","initApi","config","api","create","interceptors","request","use","response","onSuccessMutate","Promise","all","query","refetchQueries","useSetAdditionalEndpoints","hooks","additionalEndpoints","forEach","endpoint","useCustomQuery","onSuccess","useQueryClient","useMutation","put","post","useCustomMutation","useCreateApi","delete","paramsRequired","createCustomApi","replacedCached","translations","replaceRegex","RegExp","initLangCode","newTranslations","replace","noCache","test","transpileHTML","dangerouslySetInnerHTML","__html","storage","localStorage","getItem","JSON","parse","setLocalStorageValue","setItem","stringify","clearLocalStorageValue","removeItem","formatToNumber","n","fixed","Number","toFixed","formatToMoney","spacing","formatToPhone"],"sourceRoot":""}